//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieUgrozaActual_FK00", "Actualnost", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.Actualnost), "MnogieUgrozaActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieUgrozaActual), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "CeliObrabotkiPD_FK00", "OrgOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.OrgOperator), "CeliObrabotkiPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.CeliObrabotkiPD), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "ISPDnHarakteristikIshod_FK00", "VidIshodHarakteristik", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.VidIshodHarakteristik), "ISPDnHarakteristikIshod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnHarakteristikIshod), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK00", "ISPDnIshodZashita", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.ISPDnIshodZashita), "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK01", "ISPDnKategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.ISPDnKategory), "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK02", "ISPDnKlass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.ISPDnKlass), "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK03", "ISPDnObem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.ISPDnObem), "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK04", "ISPDnTipSpecial", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.ISPDnTipSpecial), "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK05", "OrgOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.OrgOperator), "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieISPDnSubj_FK00", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.ISPDnOperator), "MnogieISPDnSubj", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieISPDnSubj), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieOpasnUgrozIS_FK00", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.ISPDnOperator), "MnogieOpasnUgrozIS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieOpasnUgrozIS), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieRealizUgroz_FK00", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.ISPDnOperator), "MnogieRealizUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieRealizUgroz), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieUgrozaActual_FK01", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.ISPDnOperator), "MnogieUgrozaActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieUgrozaActual), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieVerUgrozIS_FK00", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.ISPDnOperator), "MnogieVerUgrozIS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieVerUgrozIS), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "KategoryPdBio_FK00", "OrgOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.OrgOperator), "KategoryPdBio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPdBio), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "KategoryPdDop_FK00", "OrgOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.OrgOperator), "KategoryPdDop", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPdDop), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "KategorySubj_FK00", "OrgOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.OrgOperator), "KategorySubj", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategorySubj), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieISPDnSubj_FK01", "KategorySubj", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.KategorySubj), "MnogieISPDnSubj", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieISPDnSubj), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieOpasnUgrozIS_FK01", "NazvanieUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.NazvanieUgroz), "MnogieOpasnUgrozIS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieOpasnUgrozIS), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieOpasnUgrozIS_FK02", "OpasnostUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.OpasnostUgroz), "MnogieOpasnUgrozIS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieOpasnUgrozIS), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieRealizUgroz_FK01", "NazvanieUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.NazvanieUgroz), "MnogieRealizUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieRealizUgroz), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieRealizUgroz_FK02", "RealizationUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.RealizationUgroz), "MnogieRealizUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieRealizUgroz), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieUgrozaActual_FK02", "NazvanieUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.NazvanieUgroz), "MnogieUgrozaActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieUgrozaActual), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieVerUgrozIS_FK01", "NazvanieUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplicationISPDn.NazvanieUgroz), "MnogieVerUgrozIS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieVerUgrozIS), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieVerUgrozIS_FK02", "VeroyatnostUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.VeroyatnostUgroz), "MnogieVerUgrozIS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.MnogieVerUgrozIS), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "NazvanieUgroz_FK00", "VidUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.VidUgroz), "NazvanieUgroz", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.NazvanieUgroz), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "OtdelOrg_FK00", "OrgOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.OrgOperator), "OtdelOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.OtdelOrg), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "RabotnikiOrg_FK00", "OrgOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebApplicationISPDn.OrgOperator), "RabotnikiOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.RabotnikiOrg), true)]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieCeliObrabotkiISPDn", "CeliObrabotkiPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.CeliObrabotkiPD), "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieCeliOtdel", "CeliObrabotkiPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.CeliObrabotkiPD), "OtdelOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.OtdelOrg))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieHarakteristikiIshod", "ISPDnHarakteristikIshod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnHarakteristikIshod), "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieISPDnKategoryPD", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), "KategoryPd", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPd))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieISPDnRabotniki", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), "RabotnikiOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.RabotnikiOrg))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieKategoriSpecOtdel", "KategoryPdSpec", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPdSpec), "OtdelOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.OtdelOrg))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieKategoryBioOtdel", "KategoryPdBio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPdBio), "OtdelOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.OtdelOrg))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieKategoryDopOtdel", "KategoryPdDop", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPdDop), "OtdelOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.OtdelOrg))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieKategoryPdBioISPDn", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), "KategoryPdBio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPdBio))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieKategoryPdDopISPDn", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), "KategoryPdDop", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPdDop))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieKategoryPdOtdel", "KategoryPd", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPd), "OtdelOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.OtdelOrg))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieKategoryPdSpecISPDn", "ISPDnOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.ISPDnOperator), "KategoryPdSpec", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategoryPdSpec))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieOtdelSubj", "KategorySubj", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.KategorySubj), "OtdelOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.OtdelOrg))]
[assembly: EdmRelationshipAttribute("ISPDnBDSQLModel", "MnogieRabotnikiOtdel", "OtdelOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.OtdelOrg), "RabotnikiOrg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplicationISPDn.RabotnikiOrg))]

#endregion

namespace WebApplicationISPDn
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class ISPDnBDSQLEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект ISPDnBDSQLEntities, используя строку соединения из раздела "ISPDnBDSQLEntities" файла конфигурации приложения.
        /// </summary>
        public ISPDnBDSQLEntities() : base("name=ISPDnBDSQLEntities", "ISPDnBDSQLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ISPDnBDSQLEntities.
        /// </summary>
        public ISPDnBDSQLEntities(string connectionString) : base(connectionString, "ISPDnBDSQLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ISPDnBDSQLEntities.
        /// </summary>
        public ISPDnBDSQLEntities(EntityConnection connection) : base(connection, "ISPDnBDSQLEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Actualnost> Actualnost
        {
            get
            {
                if ((_Actualnost == null))
                {
                    _Actualnost = base.CreateObjectSet<Actualnost>("Actualnost");
                }
                return _Actualnost;
            }
        }
        private ObjectSet<Actualnost> _Actualnost;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<CeliObrabotkiPD> CeliObrabotkiPD
        {
            get
            {
                if ((_CeliObrabotkiPD == null))
                {
                    _CeliObrabotkiPD = base.CreateObjectSet<CeliObrabotkiPD>("CeliObrabotkiPD");
                }
                return _CeliObrabotkiPD;
            }
        }
        private ObjectSet<CeliObrabotkiPD> _CeliObrabotkiPD;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ISPDnHarakteristikIshod> ISPDnHarakteristikIshod
        {
            get
            {
                if ((_ISPDnHarakteristikIshod == null))
                {
                    _ISPDnHarakteristikIshod = base.CreateObjectSet<ISPDnHarakteristikIshod>("ISPDnHarakteristikIshod");
                }
                return _ISPDnHarakteristikIshod;
            }
        }
        private ObjectSet<ISPDnHarakteristikIshod> _ISPDnHarakteristikIshod;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ISPDnIshodZashita> ISPDnIshodZashita
        {
            get
            {
                if ((_ISPDnIshodZashita == null))
                {
                    _ISPDnIshodZashita = base.CreateObjectSet<ISPDnIshodZashita>("ISPDnIshodZashita");
                }
                return _ISPDnIshodZashita;
            }
        }
        private ObjectSet<ISPDnIshodZashita> _ISPDnIshodZashita;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ISPDnKategory> ISPDnKategory
        {
            get
            {
                if ((_ISPDnKategory == null))
                {
                    _ISPDnKategory = base.CreateObjectSet<ISPDnKategory>("ISPDnKategory");
                }
                return _ISPDnKategory;
            }
        }
        private ObjectSet<ISPDnKategory> _ISPDnKategory;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ISPDnKlass> ISPDnKlass
        {
            get
            {
                if ((_ISPDnKlass == null))
                {
                    _ISPDnKlass = base.CreateObjectSet<ISPDnKlass>("ISPDnKlass");
                }
                return _ISPDnKlass;
            }
        }
        private ObjectSet<ISPDnKlass> _ISPDnKlass;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ISPDnObem> ISPDnObem
        {
            get
            {
                if ((_ISPDnObem == null))
                {
                    _ISPDnObem = base.CreateObjectSet<ISPDnObem>("ISPDnObem");
                }
                return _ISPDnObem;
            }
        }
        private ObjectSet<ISPDnObem> _ISPDnObem;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ISPDnOperator> ISPDnOperator
        {
            get
            {
                if ((_ISPDnOperator == null))
                {
                    _ISPDnOperator = base.CreateObjectSet<ISPDnOperator>("ISPDnOperator");
                }
                return _ISPDnOperator;
            }
        }
        private ObjectSet<ISPDnOperator> _ISPDnOperator;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ISPDnTipSpecial> ISPDnTipSpecial
        {
            get
            {
                if ((_ISPDnTipSpecial == null))
                {
                    _ISPDnTipSpecial = base.CreateObjectSet<ISPDnTipSpecial>("ISPDnTipSpecial");
                }
                return _ISPDnTipSpecial;
            }
        }
        private ObjectSet<ISPDnTipSpecial> _ISPDnTipSpecial;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<KategoryPd> KategoryPd
        {
            get
            {
                if ((_KategoryPd == null))
                {
                    _KategoryPd = base.CreateObjectSet<KategoryPd>("KategoryPd");
                }
                return _KategoryPd;
            }
        }
        private ObjectSet<KategoryPd> _KategoryPd;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<KategoryPdBio> KategoryPdBio
        {
            get
            {
                if ((_KategoryPdBio == null))
                {
                    _KategoryPdBio = base.CreateObjectSet<KategoryPdBio>("KategoryPdBio");
                }
                return _KategoryPdBio;
            }
        }
        private ObjectSet<KategoryPdBio> _KategoryPdBio;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<KategoryPdDop> KategoryPdDop
        {
            get
            {
                if ((_KategoryPdDop == null))
                {
                    _KategoryPdDop = base.CreateObjectSet<KategoryPdDop>("KategoryPdDop");
                }
                return _KategoryPdDop;
            }
        }
        private ObjectSet<KategoryPdDop> _KategoryPdDop;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<KategoryPdSpec> KategoryPdSpec
        {
            get
            {
                if ((_KategoryPdSpec == null))
                {
                    _KategoryPdSpec = base.CreateObjectSet<KategoryPdSpec>("KategoryPdSpec");
                }
                return _KategoryPdSpec;
            }
        }
        private ObjectSet<KategoryPdSpec> _KategoryPdSpec;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<KategorySubj> KategorySubj
        {
            get
            {
                if ((_KategorySubj == null))
                {
                    _KategorySubj = base.CreateObjectSet<KategorySubj>("KategorySubj");
                }
                return _KategorySubj;
            }
        }
        private ObjectSet<KategorySubj> _KategorySubj;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MnogieISPDnSubj> MnogieISPDnSubj
        {
            get
            {
                if ((_MnogieISPDnSubj == null))
                {
                    _MnogieISPDnSubj = base.CreateObjectSet<MnogieISPDnSubj>("MnogieISPDnSubj");
                }
                return _MnogieISPDnSubj;
            }
        }
        private ObjectSet<MnogieISPDnSubj> _MnogieISPDnSubj;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MnogieOpasnUgrozIS> MnogieOpasnUgrozIS
        {
            get
            {
                if ((_MnogieOpasnUgrozIS == null))
                {
                    _MnogieOpasnUgrozIS = base.CreateObjectSet<MnogieOpasnUgrozIS>("MnogieOpasnUgrozIS");
                }
                return _MnogieOpasnUgrozIS;
            }
        }
        private ObjectSet<MnogieOpasnUgrozIS> _MnogieOpasnUgrozIS;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MnogieRealizUgroz> MnogieRealizUgroz
        {
            get
            {
                if ((_MnogieRealizUgroz == null))
                {
                    _MnogieRealizUgroz = base.CreateObjectSet<MnogieRealizUgroz>("MnogieRealizUgroz");
                }
                return _MnogieRealizUgroz;
            }
        }
        private ObjectSet<MnogieRealizUgroz> _MnogieRealizUgroz;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MnogieUgrozaActual> MnogieUgrozaActual
        {
            get
            {
                if ((_MnogieUgrozaActual == null))
                {
                    _MnogieUgrozaActual = base.CreateObjectSet<MnogieUgrozaActual>("MnogieUgrozaActual");
                }
                return _MnogieUgrozaActual;
            }
        }
        private ObjectSet<MnogieUgrozaActual> _MnogieUgrozaActual;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MnogieVerUgrozIS> MnogieVerUgrozIS
        {
            get
            {
                if ((_MnogieVerUgrozIS == null))
                {
                    _MnogieVerUgrozIS = base.CreateObjectSet<MnogieVerUgrozIS>("MnogieVerUgrozIS");
                }
                return _MnogieVerUgrozIS;
            }
        }
        private ObjectSet<MnogieVerUgrozIS> _MnogieVerUgrozIS;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<NazvanieUgroz> NazvanieUgroz
        {
            get
            {
                if ((_NazvanieUgroz == null))
                {
                    _NazvanieUgroz = base.CreateObjectSet<NazvanieUgroz>("NazvanieUgroz");
                }
                return _NazvanieUgroz;
            }
        }
        private ObjectSet<NazvanieUgroz> _NazvanieUgroz;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OpasnostUgroz> OpasnostUgroz
        {
            get
            {
                if ((_OpasnostUgroz == null))
                {
                    _OpasnostUgroz = base.CreateObjectSet<OpasnostUgroz>("OpasnostUgroz");
                }
                return _OpasnostUgroz;
            }
        }
        private ObjectSet<OpasnostUgroz> _OpasnostUgroz;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrgOperator> OrgOperator
        {
            get
            {
                if ((_OrgOperator == null))
                {
                    _OrgOperator = base.CreateObjectSet<OrgOperator>("OrgOperator");
                }
                return _OrgOperator;
            }
        }
        private ObjectSet<OrgOperator> _OrgOperator;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OtdelOrg> OtdelOrg
        {
            get
            {
                if ((_OtdelOrg == null))
                {
                    _OtdelOrg = base.CreateObjectSet<OtdelOrg>("OtdelOrg");
                }
                return _OtdelOrg;
            }
        }
        private ObjectSet<OtdelOrg> _OtdelOrg;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RabotnikiOrg> RabotnikiOrg
        {
            get
            {
                if ((_RabotnikiOrg == null))
                {
                    _RabotnikiOrg = base.CreateObjectSet<RabotnikiOrg>("RabotnikiOrg");
                }
                return _RabotnikiOrg;
            }
        }
        private ObjectSet<RabotnikiOrg> _RabotnikiOrg;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RealizationUgroz> RealizationUgroz
        {
            get
            {
                if ((_RealizationUgroz == null))
                {
                    _RealizationUgroz = base.CreateObjectSet<RealizationUgroz>("RealizationUgroz");
                }
                return _RealizationUgroz;
            }
        }
        private ObjectSet<RealizationUgroz> _RealizationUgroz;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<VeroyatnostUgroz> VeroyatnostUgroz
        {
            get
            {
                if ((_VeroyatnostUgroz == null))
                {
                    _VeroyatnostUgroz = base.CreateObjectSet<VeroyatnostUgroz>("VeroyatnostUgroz");
                }
                return _VeroyatnostUgroz;
            }
        }
        private ObjectSet<VeroyatnostUgroz> _VeroyatnostUgroz;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<VidIshodHarakteristik> VidIshodHarakteristik
        {
            get
            {
                if ((_VidIshodHarakteristik == null))
                {
                    _VidIshodHarakteristik = base.CreateObjectSet<VidIshodHarakteristik>("VidIshodHarakteristik");
                }
                return _VidIshodHarakteristik;
            }
        }
        private ObjectSet<VidIshodHarakteristik> _VidIshodHarakteristik;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<VidUgroz> VidUgroz
        {
            get
            {
                if ((_VidUgroz == null))
                {
                    _VidUgroz = base.CreateObjectSet<VidUgroz>("VidUgroz");
                }
                return _VidUgroz;
            }
        }
        private ObjectSet<VidUgroz> _VidUgroz;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Actualnost. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToActualnost(Actualnost actualnost)
        {
            base.AddObject("Actualnost", actualnost);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet CeliObrabotkiPD. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCeliObrabotkiPD(CeliObrabotkiPD celiObrabotkiPD)
        {
            base.AddObject("CeliObrabotkiPD", celiObrabotkiPD);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ISPDnHarakteristikIshod. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToISPDnHarakteristikIshod(ISPDnHarakteristikIshod iSPDnHarakteristikIshod)
        {
            base.AddObject("ISPDnHarakteristikIshod", iSPDnHarakteristikIshod);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ISPDnIshodZashita. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToISPDnIshodZashita(ISPDnIshodZashita iSPDnIshodZashita)
        {
            base.AddObject("ISPDnIshodZashita", iSPDnIshodZashita);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ISPDnKategory. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToISPDnKategory(ISPDnKategory iSPDnKategory)
        {
            base.AddObject("ISPDnKategory", iSPDnKategory);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ISPDnKlass. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToISPDnKlass(ISPDnKlass iSPDnKlass)
        {
            base.AddObject("ISPDnKlass", iSPDnKlass);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ISPDnObem. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToISPDnObem(ISPDnObem iSPDnObem)
        {
            base.AddObject("ISPDnObem", iSPDnObem);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ISPDnOperator. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToISPDnOperator(ISPDnOperator iSPDnOperator)
        {
            base.AddObject("ISPDnOperator", iSPDnOperator);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ISPDnTipSpecial. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToISPDnTipSpecial(ISPDnTipSpecial iSPDnTipSpecial)
        {
            base.AddObject("ISPDnTipSpecial", iSPDnTipSpecial);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet KategoryPd. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToKategoryPd(KategoryPd kategoryPd)
        {
            base.AddObject("KategoryPd", kategoryPd);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet KategoryPdBio. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToKategoryPdBio(KategoryPdBio kategoryPdBio)
        {
            base.AddObject("KategoryPdBio", kategoryPdBio);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet KategoryPdDop. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToKategoryPdDop(KategoryPdDop kategoryPdDop)
        {
            base.AddObject("KategoryPdDop", kategoryPdDop);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet KategoryPdSpec. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToKategoryPdSpec(KategoryPdSpec kategoryPdSpec)
        {
            base.AddObject("KategoryPdSpec", kategoryPdSpec);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet KategorySubj. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToKategorySubj(KategorySubj kategorySubj)
        {
            base.AddObject("KategorySubj", kategorySubj);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MnogieISPDnSubj. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMnogieISPDnSubj(MnogieISPDnSubj mnogieISPDnSubj)
        {
            base.AddObject("MnogieISPDnSubj", mnogieISPDnSubj);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MnogieOpasnUgrozIS. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMnogieOpasnUgrozIS(MnogieOpasnUgrozIS mnogieOpasnUgrozIS)
        {
            base.AddObject("MnogieOpasnUgrozIS", mnogieOpasnUgrozIS);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MnogieRealizUgroz. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMnogieRealizUgroz(MnogieRealizUgroz mnogieRealizUgroz)
        {
            base.AddObject("MnogieRealizUgroz", mnogieRealizUgroz);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MnogieUgrozaActual. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMnogieUgrozaActual(MnogieUgrozaActual mnogieUgrozaActual)
        {
            base.AddObject("MnogieUgrozaActual", mnogieUgrozaActual);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MnogieVerUgrozIS. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMnogieVerUgrozIS(MnogieVerUgrozIS mnogieVerUgrozIS)
        {
            base.AddObject("MnogieVerUgrozIS", mnogieVerUgrozIS);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet NazvanieUgroz. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToNazvanieUgroz(NazvanieUgroz nazvanieUgroz)
        {
            base.AddObject("NazvanieUgroz", nazvanieUgroz);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OpasnostUgroz. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOpasnostUgroz(OpasnostUgroz opasnostUgroz)
        {
            base.AddObject("OpasnostUgroz", opasnostUgroz);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrgOperator. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrgOperator(OrgOperator orgOperator)
        {
            base.AddObject("OrgOperator", orgOperator);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OtdelOrg. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOtdelOrg(OtdelOrg otdelOrg)
        {
            base.AddObject("OtdelOrg", otdelOrg);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RabotnikiOrg. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRabotnikiOrg(RabotnikiOrg rabotnikiOrg)
        {
            base.AddObject("RabotnikiOrg", rabotnikiOrg);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RealizationUgroz. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRealizationUgroz(RealizationUgroz realizationUgroz)
        {
            base.AddObject("RealizationUgroz", realizationUgroz);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet VeroyatnostUgroz. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToVeroyatnostUgroz(VeroyatnostUgroz veroyatnostUgroz)
        {
            base.AddObject("VeroyatnostUgroz", veroyatnostUgroz);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet VidIshodHarakteristik. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToVidIshodHarakteristik(VidIshodHarakteristik vidIshodHarakteristik)
        {
            base.AddObject("VidIshodHarakteristik", vidIshodHarakteristik);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet VidUgroz. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToVidUgroz(VidUgroz vidUgroz)
        {
            base.AddObject("VidUgroz", vidUgroz);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="Actualnost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actualnost : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Actualnost.
        /// </summary>
        /// <param name="actualnostID">Исходное значение свойства ActualnostID.</param>
        public static Actualnost CreateActualnost(global::System.Int32 actualnostID)
        {
            Actualnost actualnost = new Actualnost();
            actualnost.ActualnostID = actualnostID;
            return actualnost;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualnostID
        {
            get
            {
                return _ActualnostID;
            }
            set
            {
                if (_ActualnostID != value)
                {
                    OnActualnostIDChanging(value);
                    ReportPropertyChanging("ActualnostID");
                    _ActualnostID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualnostID");
                    OnActualnostIDChanged();
                }
            }
        }
        private global::System.Int32 _ActualnostID;
        partial void OnActualnostIDChanging(global::System.Int32 value);
        partial void OnActualnostIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActualnostName
        {
            get
            {
                return _ActualnostName;
            }
            set
            {
                OnActualnostNameChanging(value);
                ReportPropertyChanging("ActualnostName");
                _ActualnostName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActualnostName");
                OnActualnostNameChanged();
            }
        }
        private global::System.String _ActualnostName;
        partial void OnActualnostNameChanging(global::System.String value);
        partial void OnActualnostNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieUgrozaActual_FK00", "MnogieUgrozaActual")]
        public EntityCollection<MnogieUgrozaActual> MnogieUgrozaActual
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieUgrozaActual>("ISPDnBDSQLModel.MnogieUgrozaActual_FK00", "MnogieUgrozaActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieUgrozaActual>("ISPDnBDSQLModel.MnogieUgrozaActual_FK00", "MnogieUgrozaActual", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="CeliObrabotkiPD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CeliObrabotkiPD : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта CeliObrabotkiPD.
        /// </summary>
        /// <param name="celiObrabotkiPDID">Исходное значение свойства CeliObrabotkiPDID.</param>
        /// <param name="celiObrabotkiSelect">Исходное значение свойства CeliObrabotkiSelect.</param>
        public static CeliObrabotkiPD CreateCeliObrabotkiPD(global::System.Int32 celiObrabotkiPDID, global::System.Boolean celiObrabotkiSelect)
        {
            CeliObrabotkiPD celiObrabotkiPD = new CeliObrabotkiPD();
            celiObrabotkiPD.CeliObrabotkiPDID = celiObrabotkiPDID;
            celiObrabotkiPD.CeliObrabotkiSelect = celiObrabotkiSelect;
            return celiObrabotkiPD;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CeliObrabotkiPDID
        {
            get
            {
                return _CeliObrabotkiPDID;
            }
            set
            {
                if (_CeliObrabotkiPDID != value)
                {
                    OnCeliObrabotkiPDIDChanging(value);
                    ReportPropertyChanging("CeliObrabotkiPDID");
                    _CeliObrabotkiPDID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CeliObrabotkiPDID");
                    OnCeliObrabotkiPDIDChanged();
                }
            }
        }
        private global::System.Int32 _CeliObrabotkiPDID;
        partial void OnCeliObrabotkiPDIDChanging(global::System.Int32 value);
        partial void OnCeliObrabotkiPDIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CeliObrabotkiName
        {
            get
            {
                return _CeliObrabotkiName;
            }
            set
            {
                OnCeliObrabotkiNameChanging(value);
                ReportPropertyChanging("CeliObrabotkiName");
                _CeliObrabotkiName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CeliObrabotkiName");
                OnCeliObrabotkiNameChanged();
            }
        }
        private global::System.String _CeliObrabotkiName;
        partial void OnCeliObrabotkiNameChanging(global::System.String value);
        partial void OnCeliObrabotkiNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CeliObrabotkiSelect
        {
            get
            {
                return _CeliObrabotkiSelect;
            }
            set
            {
                OnCeliObrabotkiSelectChanging(value);
                ReportPropertyChanging("CeliObrabotkiSelect");
                _CeliObrabotkiSelect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CeliObrabotkiSelect");
                OnCeliObrabotkiSelectChanged();
            }
        }
        private global::System.Boolean _CeliObrabotkiSelect;
        partial void OnCeliObrabotkiSelectChanging(global::System.Boolean value);
        partial void OnCeliObrabotkiSelectChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrgOperatorID
        {
            get
            {
                return _OrgOperatorID;
            }
            set
            {
                OnOrgOperatorIDChanging(value);
                ReportPropertyChanging("OrgOperatorID");
                _OrgOperatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgOperatorID");
                OnOrgOperatorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrgOperatorID;
        partial void OnOrgOperatorIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrgOperatorIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "CeliObrabotkiPD_FK00", "OrgOperator")]
        public OrgOperator OrgOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.CeliObrabotkiPD_FK00", "OrgOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.CeliObrabotkiPD_FK00", "OrgOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrgOperator> OrgOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.CeliObrabotkiPD_FK00", "OrgOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrgOperator>("ISPDnBDSQLModel.CeliObrabotkiPD_FK00", "OrgOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieCeliObrabotkiISPDn", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieCeliObrabotkiISPDn", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieCeliObrabotkiISPDn", "ISPDnOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieCeliOtdel", "OtdelOrg")]
        public EntityCollection<OtdelOrg> OtdelOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieCeliOtdel", "OtdelOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieCeliOtdel", "OtdelOrg", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="ISPDnHarakteristikIshod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISPDnHarakteristikIshod : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ISPDnHarakteristikIshod.
        /// </summary>
        /// <param name="iSPDnHarakteristikIshodID">Исходное значение свойства ISPDnHarakteristikIshodID.</param>
        public static ISPDnHarakteristikIshod CreateISPDnHarakteristikIshod(global::System.Int32 iSPDnHarakteristikIshodID)
        {
            ISPDnHarakteristikIshod iSPDnHarakteristikIshod = new ISPDnHarakteristikIshod();
            iSPDnHarakteristikIshod.ISPDnHarakteristikIshodID = iSPDnHarakteristikIshodID;
            return iSPDnHarakteristikIshod;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnHarakteristikIshodID
        {
            get
            {
                return _ISPDnHarakteristikIshodID;
            }
            set
            {
                if (_ISPDnHarakteristikIshodID != value)
                {
                    OnISPDnHarakteristikIshodIDChanging(value);
                    ReportPropertyChanging("ISPDnHarakteristikIshodID");
                    _ISPDnHarakteristikIshodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnHarakteristikIshodID");
                    OnISPDnHarakteristikIshodIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnHarakteristikIshodID;
        partial void OnISPDnHarakteristikIshodIDChanging(global::System.Int32 value);
        partial void OnISPDnHarakteristikIshodIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISPDnHarakteristikIshodName
        {
            get
            {
                return _ISPDnHarakteristikIshodName;
            }
            set
            {
                OnISPDnHarakteristikIshodNameChanging(value);
                ReportPropertyChanging("ISPDnHarakteristikIshodName");
                _ISPDnHarakteristikIshodName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISPDnHarakteristikIshodName");
                OnISPDnHarakteristikIshodNameChanged();
            }
        }
        private global::System.String _ISPDnHarakteristikIshodName;
        partial void OnISPDnHarakteristikIshodNameChanging(global::System.String value);
        partial void OnISPDnHarakteristikIshodNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VidIshodHarakteristikID
        {
            get
            {
                return _VidIshodHarakteristikID;
            }
            set
            {
                OnVidIshodHarakteristikIDChanging(value);
                ReportPropertyChanging("VidIshodHarakteristikID");
                _VidIshodHarakteristikID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VidIshodHarakteristikID");
                OnVidIshodHarakteristikIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VidIshodHarakteristikID;
        partial void OnVidIshodHarakteristikIDChanging(Nullable<global::System.Int32> value);
        partial void OnVidIshodHarakteristikIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnHarakteristikIshod_FK00", "VidIshodHarakteristik")]
        public VidIshodHarakteristik VidIshodHarakteristik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VidIshodHarakteristik>("ISPDnBDSQLModel.ISPDnHarakteristikIshod_FK00", "VidIshodHarakteristik").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VidIshodHarakteristik>("ISPDnBDSQLModel.ISPDnHarakteristikIshod_FK00", "VidIshodHarakteristik").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VidIshodHarakteristik> VidIshodHarakteristikReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VidIshodHarakteristik>("ISPDnBDSQLModel.ISPDnHarakteristikIshod_FK00", "VidIshodHarakteristik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VidIshodHarakteristik>("ISPDnBDSQLModel.ISPDnHarakteristikIshod_FK00", "VidIshodHarakteristik", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieHarakteristikiIshod", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieHarakteristikiIshod", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieHarakteristikiIshod", "ISPDnOperator", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="ISPDnIshodZashita")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISPDnIshodZashita : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ISPDnIshodZashita.
        /// </summary>
        /// <param name="iSPDnIshodZashitaID">Исходное значение свойства ISPDnIshodZashitaID.</param>
        public static ISPDnIshodZashita CreateISPDnIshodZashita(global::System.Int32 iSPDnIshodZashitaID)
        {
            ISPDnIshodZashita iSPDnIshodZashita = new ISPDnIshodZashita();
            iSPDnIshodZashita.ISPDnIshodZashitaID = iSPDnIshodZashitaID;
            return iSPDnIshodZashita;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnIshodZashitaID
        {
            get
            {
                return _ISPDnIshodZashitaID;
            }
            set
            {
                if (_ISPDnIshodZashitaID != value)
                {
                    OnISPDnIshodZashitaIDChanging(value);
                    ReportPropertyChanging("ISPDnIshodZashitaID");
                    _ISPDnIshodZashitaID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnIshodZashitaID");
                    OnISPDnIshodZashitaIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnIshodZashitaID;
        partial void OnISPDnIshodZashitaIDChanging(global::System.Int32 value);
        partial void OnISPDnIshodZashitaIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISPDnIshodZashitaName
        {
            get
            {
                return _ISPDnIshodZashitaName;
            }
            set
            {
                OnISPDnIshodZashitaNameChanging(value);
                ReportPropertyChanging("ISPDnIshodZashitaName");
                _ISPDnIshodZashitaName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISPDnIshodZashitaName");
                OnISPDnIshodZashitaNameChanged();
            }
        }
        private global::System.String _ISPDnIshodZashitaName;
        partial void OnISPDnIshodZashitaNameChanging(global::System.String value);
        partial void OnISPDnIshodZashitaNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IshodKofY1
        {
            get
            {
                return _IshodKofY1;
            }
            set
            {
                OnIshodKofY1Changing(value);
                ReportPropertyChanging("IshodKofY1");
                _IshodKofY1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IshodKofY1");
                OnIshodKofY1Changed();
            }
        }
        private Nullable<global::System.Int32> _IshodKofY1;
        partial void OnIshodKofY1Changing(Nullable<global::System.Int32> value);
        partial void OnIshodKofY1Changed();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK00", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK00", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK00", "ISPDnOperator", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="ISPDnKategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISPDnKategory : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ISPDnKategory.
        /// </summary>
        /// <param name="iSPDnKategoryID">Исходное значение свойства ISPDnKategoryID.</param>
        public static ISPDnKategory CreateISPDnKategory(global::System.Int32 iSPDnKategoryID)
        {
            ISPDnKategory iSPDnKategory = new ISPDnKategory();
            iSPDnKategory.ISPDnKategoryID = iSPDnKategoryID;
            return iSPDnKategory;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnKategoryID
        {
            get
            {
                return _ISPDnKategoryID;
            }
            set
            {
                if (_ISPDnKategoryID != value)
                {
                    OnISPDnKategoryIDChanging(value);
                    ReportPropertyChanging("ISPDnKategoryID");
                    _ISPDnKategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnKategoryID");
                    OnISPDnKategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnKategoryID;
        partial void OnISPDnKategoryIDChanging(global::System.Int32 value);
        partial void OnISPDnKategoryIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISPDnKategoryName
        {
            get
            {
                return _ISPDnKategoryName;
            }
            set
            {
                OnISPDnKategoryNameChanging(value);
                ReportPropertyChanging("ISPDnKategoryName");
                _ISPDnKategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISPDnKategoryName");
                OnISPDnKategoryNameChanged();
            }
        }
        private global::System.String _ISPDnKategoryName;
        partial void OnISPDnKategoryNameChanging(global::System.String value);
        partial void OnISPDnKategoryNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISPDnKategoryOpisanie
        {
            get
            {
                return _ISPDnKategoryOpisanie;
            }
            set
            {
                OnISPDnKategoryOpisanieChanging(value);
                ReportPropertyChanging("ISPDnKategoryOpisanie");
                _ISPDnKategoryOpisanie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISPDnKategoryOpisanie");
                OnISPDnKategoryOpisanieChanged();
            }
        }
        private global::System.String _ISPDnKategoryOpisanie;
        partial void OnISPDnKategoryOpisanieChanging(global::System.String value);
        partial void OnISPDnKategoryOpisanieChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK01", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK01", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK01", "ISPDnOperator", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="ISPDnKlass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISPDnKlass : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ISPDnKlass.
        /// </summary>
        /// <param name="iSPDnKlassID">Исходное значение свойства ISPDnKlassID.</param>
        public static ISPDnKlass CreateISPDnKlass(global::System.Int32 iSPDnKlassID)
        {
            ISPDnKlass iSPDnKlass = new ISPDnKlass();
            iSPDnKlass.ISPDnKlassID = iSPDnKlassID;
            return iSPDnKlass;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnKlassID
        {
            get
            {
                return _ISPDnKlassID;
            }
            set
            {
                if (_ISPDnKlassID != value)
                {
                    OnISPDnKlassIDChanging(value);
                    ReportPropertyChanging("ISPDnKlassID");
                    _ISPDnKlassID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnKlassID");
                    OnISPDnKlassIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnKlassID;
        partial void OnISPDnKlassIDChanging(global::System.Int32 value);
        partial void OnISPDnKlassIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISPDnPrisvoenKlass
        {
            get
            {
                return _ISPDnPrisvoenKlass;
            }
            set
            {
                OnISPDnPrisvoenKlassChanging(value);
                ReportPropertyChanging("ISPDnPrisvoenKlass");
                _ISPDnPrisvoenKlass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISPDnPrisvoenKlass");
                OnISPDnPrisvoenKlassChanged();
            }
        }
        private global::System.String _ISPDnPrisvoenKlass;
        partial void OnISPDnPrisvoenKlassChanging(global::System.String value);
        partial void OnISPDnPrisvoenKlassChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpisanieKlass
        {
            get
            {
                return _OpisanieKlass;
            }
            set
            {
                OnOpisanieKlassChanging(value);
                ReportPropertyChanging("OpisanieKlass");
                _OpisanieKlass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpisanieKlass");
                OnOpisanieKlassChanged();
            }
        }
        private global::System.String _OpisanieKlass;
        partial void OnOpisanieKlassChanging(global::System.String value);
        partial void OnOpisanieKlassChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK02", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK02", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK02", "ISPDnOperator", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="ISPDnObem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISPDnObem : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ISPDnObem.
        /// </summary>
        /// <param name="iSPDnObemID">Исходное значение свойства ISPDnObemID.</param>
        public static ISPDnObem CreateISPDnObem(global::System.Int32 iSPDnObemID)
        {
            ISPDnObem iSPDnObem = new ISPDnObem();
            iSPDnObem.ISPDnObemID = iSPDnObemID;
            return iSPDnObem;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnObemID
        {
            get
            {
                return _ISPDnObemID;
            }
            set
            {
                if (_ISPDnObemID != value)
                {
                    OnISPDnObemIDChanging(value);
                    ReportPropertyChanging("ISPDnObemID");
                    _ISPDnObemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnObemID");
                    OnISPDnObemIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnObemID;
        partial void OnISPDnObemIDChanging(global::System.Int32 value);
        partial void OnISPDnObemIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISPDnObemOpisanie
        {
            get
            {
                return _ISPDnObemOpisanie;
            }
            set
            {
                OnISPDnObemOpisanieChanging(value);
                ReportPropertyChanging("ISPDnObemOpisanie");
                _ISPDnObemOpisanie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISPDnObemOpisanie");
                OnISPDnObemOpisanieChanged();
            }
        }
        private global::System.String _ISPDnObemOpisanie;
        partial void OnISPDnObemOpisanieChanging(global::System.String value);
        partial void OnISPDnObemOpisanieChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK03", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK03", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK03", "ISPDnOperator", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="ISPDnOperator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISPDnOperator : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ISPDnOperator.
        /// </summary>
        /// <param name="iSPDnOperatorID">Исходное значение свойства ISPDnOperatorID.</param>
        public static ISPDnOperator CreateISPDnOperator(global::System.Int32 iSPDnOperatorID)
        {
            ISPDnOperator iSPDnOperator = new ISPDnOperator();
            iSPDnOperator.ISPDnOperatorID = iSPDnOperatorID;
            return iSPDnOperator;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnOperatorID
        {
            get
            {
                return _ISPDnOperatorID;
            }
            set
            {
                if (_ISPDnOperatorID != value)
                {
                    OnISPDnOperatorIDChanging(value);
                    ReportPropertyChanging("ISPDnOperatorID");
                    _ISPDnOperatorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnOperatorID");
                    OnISPDnOperatorIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnOperatorID;
        partial void OnISPDnOperatorIDChanging(global::System.Int32 value);
        partial void OnISPDnOperatorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISPDnOperatorName
        {
            get
            {
                return _ISPDnOperatorName;
            }
            set
            {
                OnISPDnOperatorNameChanging(value);
                ReportPropertyChanging("ISPDnOperatorName");
                _ISPDnOperatorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISPDnOperatorName");
                OnISPDnOperatorNameChanged();
            }
        }
        private global::System.String _ISPDnOperatorName;
        partial void OnISPDnOperatorNameChanging(global::System.String value);
        partial void OnISPDnOperatorNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrgOperatorID
        {
            get
            {
                return _OrgOperatorID;
            }
            set
            {
                OnOrgOperatorIDChanging(value);
                ReportPropertyChanging("OrgOperatorID");
                _OrgOperatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgOperatorID");
                OnOrgOperatorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrgOperatorID;
        partial void OnOrgOperatorIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrgOperatorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ISPDnKategoryID
        {
            get
            {
                return _ISPDnKategoryID;
            }
            set
            {
                OnISPDnKategoryIDChanging(value);
                ReportPropertyChanging("ISPDnKategoryID");
                _ISPDnKategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISPDnKategoryID");
                OnISPDnKategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ISPDnKategoryID;
        partial void OnISPDnKategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnISPDnKategoryIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ISPDnObemID
        {
            get
            {
                return _ISPDnObemID;
            }
            set
            {
                OnISPDnObemIDChanging(value);
                ReportPropertyChanging("ISPDnObemID");
                _ISPDnObemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISPDnObemID");
                OnISPDnObemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ISPDnObemID;
        partial void OnISPDnObemIDChanging(Nullable<global::System.Int32> value);
        partial void OnISPDnObemIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ISPDnKlassID
        {
            get
            {
                return _ISPDnKlassID;
            }
            set
            {
                OnISPDnKlassIDChanging(value);
                ReportPropertyChanging("ISPDnKlassID");
                _ISPDnKlassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISPDnKlassID");
                OnISPDnKlassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ISPDnKlassID;
        partial void OnISPDnKlassIDChanging(Nullable<global::System.Int32> value);
        partial void OnISPDnKlassIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ISPDnIshodZashitaID
        {
            get
            {
                return _ISPDnIshodZashitaID;
            }
            set
            {
                OnISPDnIshodZashitaIDChanging(value);
                ReportPropertyChanging("ISPDnIshodZashitaID");
                _ISPDnIshodZashitaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISPDnIshodZashitaID");
                OnISPDnIshodZashitaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ISPDnIshodZashitaID;
        partial void OnISPDnIshodZashitaIDChanging(Nullable<global::System.Int32> value);
        partial void OnISPDnIshodZashitaIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ISPDnTipSpecialID
        {
            get
            {
                return _ISPDnTipSpecialID;
            }
            set
            {
                OnISPDnTipSpecialIDChanging(value);
                ReportPropertyChanging("ISPDnTipSpecialID");
                _ISPDnTipSpecialID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISPDnTipSpecialID");
                OnISPDnTipSpecialIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ISPDnTipSpecialID;
        partial void OnISPDnTipSpecialIDChanging(Nullable<global::System.Int32> value);
        partial void OnISPDnTipSpecialIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ISPDnTipModeli
        {
            get
            {
                return _ISPDnTipModeli;
            }
            set
            {
                OnISPDnTipModeliChanging(value);
                ReportPropertyChanging("ISPDnTipModeli");
                _ISPDnTipModeli = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ISPDnTipModeli");
                OnISPDnTipModeliChanged();
            }
        }
        private Nullable<global::System.Int32> _ISPDnTipModeli;
        partial void OnISPDnTipModeliChanging(Nullable<global::System.Int32> value);
        partial void OnISPDnTipModeliChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK00", "ISPDnIshodZashita")]
        public ISPDnIshodZashita ISPDnIshodZashita
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnIshodZashita>("ISPDnBDSQLModel.ISPDnOperator_FK00", "ISPDnIshodZashita").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnIshodZashita>("ISPDnBDSQLModel.ISPDnOperator_FK00", "ISPDnIshodZashita").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnIshodZashita> ISPDnIshodZashitaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnIshodZashita>("ISPDnBDSQLModel.ISPDnOperator_FK00", "ISPDnIshodZashita");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnIshodZashita>("ISPDnBDSQLModel.ISPDnOperator_FK00", "ISPDnIshodZashita", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK01", "ISPDnKategory")]
        public ISPDnKategory ISPDnKategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnKategory>("ISPDnBDSQLModel.ISPDnOperator_FK01", "ISPDnKategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnKategory>("ISPDnBDSQLModel.ISPDnOperator_FK01", "ISPDnKategory").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnKategory> ISPDnKategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnKategory>("ISPDnBDSQLModel.ISPDnOperator_FK01", "ISPDnKategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnKategory>("ISPDnBDSQLModel.ISPDnOperator_FK01", "ISPDnKategory", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK02", "ISPDnKlass")]
        public ISPDnKlass ISPDnKlass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnKlass>("ISPDnBDSQLModel.ISPDnOperator_FK02", "ISPDnKlass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnKlass>("ISPDnBDSQLModel.ISPDnOperator_FK02", "ISPDnKlass").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnKlass> ISPDnKlassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnKlass>("ISPDnBDSQLModel.ISPDnOperator_FK02", "ISPDnKlass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnKlass>("ISPDnBDSQLModel.ISPDnOperator_FK02", "ISPDnKlass", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK03", "ISPDnObem")]
        public ISPDnObem ISPDnObem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnObem>("ISPDnBDSQLModel.ISPDnOperator_FK03", "ISPDnObem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnObem>("ISPDnBDSQLModel.ISPDnOperator_FK03", "ISPDnObem").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnObem> ISPDnObemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnObem>("ISPDnBDSQLModel.ISPDnOperator_FK03", "ISPDnObem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnObem>("ISPDnBDSQLModel.ISPDnOperator_FK03", "ISPDnObem", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK04", "ISPDnTipSpecial")]
        public ISPDnTipSpecial ISPDnTipSpecial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnTipSpecial>("ISPDnBDSQLModel.ISPDnOperator_FK04", "ISPDnTipSpecial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnTipSpecial>("ISPDnBDSQLModel.ISPDnOperator_FK04", "ISPDnTipSpecial").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnTipSpecial> ISPDnTipSpecialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnTipSpecial>("ISPDnBDSQLModel.ISPDnOperator_FK04", "ISPDnTipSpecial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnTipSpecial>("ISPDnBDSQLModel.ISPDnOperator_FK04", "ISPDnTipSpecial", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK05", "OrgOperator")]
        public OrgOperator OrgOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.ISPDnOperator_FK05", "OrgOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.ISPDnOperator_FK05", "OrgOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrgOperator> OrgOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.ISPDnOperator_FK05", "OrgOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrgOperator>("ISPDnBDSQLModel.ISPDnOperator_FK05", "OrgOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieISPDnSubj_FK00", "MnogieISPDnSubj")]
        public EntityCollection<MnogieISPDnSubj> MnogieISPDnSubj
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieISPDnSubj>("ISPDnBDSQLModel.MnogieISPDnSubj_FK00", "MnogieISPDnSubj");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieISPDnSubj>("ISPDnBDSQLModel.MnogieISPDnSubj_FK00", "MnogieISPDnSubj", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieOpasnUgrozIS_FK00", "MnogieOpasnUgrozIS")]
        public EntityCollection<MnogieOpasnUgrozIS> MnogieOpasnUgrozIS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieOpasnUgrozIS>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK00", "MnogieOpasnUgrozIS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieOpasnUgrozIS>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK00", "MnogieOpasnUgrozIS", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieRealizUgroz_FK00", "MnogieRealizUgroz")]
        public EntityCollection<MnogieRealizUgroz> MnogieRealizUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieRealizUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK00", "MnogieRealizUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieRealizUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK00", "MnogieRealizUgroz", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieUgrozaActual_FK01", "MnogieUgrozaActual")]
        public EntityCollection<MnogieUgrozaActual> MnogieUgrozaActual
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieUgrozaActual>("ISPDnBDSQLModel.MnogieUgrozaActual_FK01", "MnogieUgrozaActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieUgrozaActual>("ISPDnBDSQLModel.MnogieUgrozaActual_FK01", "MnogieUgrozaActual", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieVerUgrozIS_FK00", "MnogieVerUgrozIS")]
        public EntityCollection<MnogieVerUgrozIS> MnogieVerUgrozIS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieVerUgrozIS>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK00", "MnogieVerUgrozIS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieVerUgrozIS>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK00", "MnogieVerUgrozIS", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieCeliObrabotkiISPDn", "CeliObrabotkiPD")]
        public EntityCollection<CeliObrabotkiPD> CeliObrabotkiPD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CeliObrabotkiPD>("ISPDnBDSQLModel.MnogieCeliObrabotkiISPDn", "CeliObrabotkiPD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CeliObrabotkiPD>("ISPDnBDSQLModel.MnogieCeliObrabotkiISPDn", "CeliObrabotkiPD", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieHarakteristikiIshod", "ISPDnHarakteristikIshod")]
        public EntityCollection<ISPDnHarakteristikIshod> ISPDnHarakteristikIshod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnHarakteristikIshod>("ISPDnBDSQLModel.MnogieHarakteristikiIshod", "ISPDnHarakteristikIshod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnHarakteristikIshod>("ISPDnBDSQLModel.MnogieHarakteristikiIshod", "ISPDnHarakteristikIshod", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieISPDnKategoryPD", "KategoryPd")]
        public EntityCollection<KategoryPd> KategoryPd
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPd>("ISPDnBDSQLModel.MnogieISPDnKategoryPD", "KategoryPd");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPd>("ISPDnBDSQLModel.MnogieISPDnKategoryPD", "KategoryPd", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieISPDnRabotniki", "RabotnikiOrg")]
        public EntityCollection<RabotnikiOrg> RabotnikiOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RabotnikiOrg>("ISPDnBDSQLModel.MnogieISPDnRabotniki", "RabotnikiOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RabotnikiOrg>("ISPDnBDSQLModel.MnogieISPDnRabotniki", "RabotnikiOrg", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryPdBioISPDn", "KategoryPdBio")]
        public EntityCollection<KategoryPdBio> KategoryPdBio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPdBio>("ISPDnBDSQLModel.MnogieKategoryPdBioISPDn", "KategoryPdBio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPdBio>("ISPDnBDSQLModel.MnogieKategoryPdBioISPDn", "KategoryPdBio", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryPdDopISPDn", "KategoryPdDop")]
        public EntityCollection<KategoryPdDop> KategoryPdDop
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPdDop>("ISPDnBDSQLModel.MnogieKategoryPdDopISPDn", "KategoryPdDop");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPdDop>("ISPDnBDSQLModel.MnogieKategoryPdDopISPDn", "KategoryPdDop", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryPdSpecISPDn", "KategoryPdSpec")]
        public EntityCollection<KategoryPdSpec> KategoryPdSpec
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPdSpec>("ISPDnBDSQLModel.MnogieKategoryPdSpecISPDn", "KategoryPdSpec");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPdSpec>("ISPDnBDSQLModel.MnogieKategoryPdSpecISPDn", "KategoryPdSpec", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="ISPDnTipSpecial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ISPDnTipSpecial : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ISPDnTipSpecial.
        /// </summary>
        /// <param name="iSPDnTipSpecialID">Исходное значение свойства ISPDnTipSpecialID.</param>
        public static ISPDnTipSpecial CreateISPDnTipSpecial(global::System.Int32 iSPDnTipSpecialID)
        {
            ISPDnTipSpecial iSPDnTipSpecial = new ISPDnTipSpecial();
            iSPDnTipSpecial.ISPDnTipSpecialID = iSPDnTipSpecialID;
            return iSPDnTipSpecial;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnTipSpecialID
        {
            get
            {
                return _ISPDnTipSpecialID;
            }
            set
            {
                if (_ISPDnTipSpecialID != value)
                {
                    OnISPDnTipSpecialIDChanging(value);
                    ReportPropertyChanging("ISPDnTipSpecialID");
                    _ISPDnTipSpecialID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnTipSpecialID");
                    OnISPDnTipSpecialIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnTipSpecialID;
        partial void OnISPDnTipSpecialIDChanging(global::System.Int32 value);
        partial void OnISPDnTipSpecialIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISPDnTipSpecialName
        {
            get
            {
                return _ISPDnTipSpecialName;
            }
            set
            {
                OnISPDnTipSpecialNameChanging(value);
                ReportPropertyChanging("ISPDnTipSpecialName");
                _ISPDnTipSpecialName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISPDnTipSpecialName");
                OnISPDnTipSpecialNameChanged();
            }
        }
        private global::System.String _ISPDnTipSpecialName;
        partial void OnISPDnTipSpecialNameChanging(global::System.String value);
        partial void OnISPDnTipSpecialNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISPDnTipSpecialOpisanie
        {
            get
            {
                return _ISPDnTipSpecialOpisanie;
            }
            set
            {
                OnISPDnTipSpecialOpisanieChanging(value);
                ReportPropertyChanging("ISPDnTipSpecialOpisanie");
                _ISPDnTipSpecialOpisanie = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISPDnTipSpecialOpisanie");
                OnISPDnTipSpecialOpisanieChanged();
            }
        }
        private global::System.String _ISPDnTipSpecialOpisanie;
        partial void OnISPDnTipSpecialOpisanieChanging(global::System.String value);
        partial void OnISPDnTipSpecialOpisanieChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK04", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK04", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK04", "ISPDnOperator", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="KategoryPd")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KategoryPd : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта KategoryPd.
        /// </summary>
        /// <param name="kategoryPdID">Исходное значение свойства KategoryPdID.</param>
        public static KategoryPd CreateKategoryPd(global::System.Int32 kategoryPdID)
        {
            KategoryPd kategoryPd = new KategoryPd();
            kategoryPd.KategoryPdID = kategoryPdID;
            return kategoryPd;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KategoryPdID
        {
            get
            {
                return _KategoryPdID;
            }
            set
            {
                if (_KategoryPdID != value)
                {
                    OnKategoryPdIDChanging(value);
                    ReportPropertyChanging("KategoryPdID");
                    _KategoryPdID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KategoryPdID");
                    OnKategoryPdIDChanged();
                }
            }
        }
        private global::System.Int32 _KategoryPdID;
        partial void OnKategoryPdIDChanging(global::System.Int32 value);
        partial void OnKategoryPdIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KategoryPdName
        {
            get
            {
                return _KategoryPdName;
            }
            set
            {
                OnKategoryPdNameChanging(value);
                ReportPropertyChanging("KategoryPdName");
                _KategoryPdName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KategoryPdName");
                OnKategoryPdNameChanged();
            }
        }
        private global::System.String _KategoryPdName;
        partial void OnKategoryPdNameChanging(global::System.String value);
        partial void OnKategoryPdNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieISPDnKategoryPD", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieISPDnKategoryPD", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieISPDnKategoryPD", "ISPDnOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryPdOtdel", "OtdelOrg")]
        public EntityCollection<OtdelOrg> OtdelOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieKategoryPdOtdel", "OtdelOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieKategoryPdOtdel", "OtdelOrg", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="KategoryPdBio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KategoryPdBio : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта KategoryPdBio.
        /// </summary>
        /// <param name="kategoryPdBioID">Исходное значение свойства KategoryPdBioID.</param>
        /// <param name="kategoryPdBioSelect">Исходное значение свойства KategoryPdBioSelect.</param>
        public static KategoryPdBio CreateKategoryPdBio(global::System.Int32 kategoryPdBioID, global::System.Boolean kategoryPdBioSelect)
        {
            KategoryPdBio kategoryPdBio = new KategoryPdBio();
            kategoryPdBio.KategoryPdBioID = kategoryPdBioID;
            kategoryPdBio.KategoryPdBioSelect = kategoryPdBioSelect;
            return kategoryPdBio;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KategoryPdBioID
        {
            get
            {
                return _KategoryPdBioID;
            }
            set
            {
                if (_KategoryPdBioID != value)
                {
                    OnKategoryPdBioIDChanging(value);
                    ReportPropertyChanging("KategoryPdBioID");
                    _KategoryPdBioID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KategoryPdBioID");
                    OnKategoryPdBioIDChanged();
                }
            }
        }
        private global::System.Int32 _KategoryPdBioID;
        partial void OnKategoryPdBioIDChanging(global::System.Int32 value);
        partial void OnKategoryPdBioIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KategoryPdBioName
        {
            get
            {
                return _KategoryPdBioName;
            }
            set
            {
                OnKategoryPdBioNameChanging(value);
                ReportPropertyChanging("KategoryPdBioName");
                _KategoryPdBioName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KategoryPdBioName");
                OnKategoryPdBioNameChanged();
            }
        }
        private global::System.String _KategoryPdBioName;
        partial void OnKategoryPdBioNameChanging(global::System.String value);
        partial void OnKategoryPdBioNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrgOperatorID
        {
            get
            {
                return _OrgOperatorID;
            }
            set
            {
                OnOrgOperatorIDChanging(value);
                ReportPropertyChanging("OrgOperatorID");
                _OrgOperatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgOperatorID");
                OnOrgOperatorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrgOperatorID;
        partial void OnOrgOperatorIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrgOperatorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean KategoryPdBioSelect
        {
            get
            {
                return _KategoryPdBioSelect;
            }
            set
            {
                OnKategoryPdBioSelectChanging(value);
                ReportPropertyChanging("KategoryPdBioSelect");
                _KategoryPdBioSelect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KategoryPdBioSelect");
                OnKategoryPdBioSelectChanged();
            }
        }
        private global::System.Boolean _KategoryPdBioSelect;
        partial void OnKategoryPdBioSelectChanging(global::System.Boolean value);
        partial void OnKategoryPdBioSelectChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "KategoryPdBio_FK00", "OrgOperator")]
        public OrgOperator OrgOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategoryPdBio_FK00", "OrgOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategoryPdBio_FK00", "OrgOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrgOperator> OrgOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategoryPdBio_FK00", "OrgOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategoryPdBio_FK00", "OrgOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryBioOtdel", "OtdelOrg")]
        public EntityCollection<OtdelOrg> OtdelOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieKategoryBioOtdel", "OtdelOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieKategoryBioOtdel", "OtdelOrg", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryPdBioISPDn", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieKategoryPdBioISPDn", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieKategoryPdBioISPDn", "ISPDnOperator", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="KategoryPdDop")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KategoryPdDop : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта KategoryPdDop.
        /// </summary>
        /// <param name="kategoryPdDopID">Исходное значение свойства KategoryPdDopID.</param>
        /// <param name="kategoryPdDopSelect">Исходное значение свойства KategoryPdDopSelect.</param>
        public static KategoryPdDop CreateKategoryPdDop(global::System.Int32 kategoryPdDopID, global::System.Boolean kategoryPdDopSelect)
        {
            KategoryPdDop kategoryPdDop = new KategoryPdDop();
            kategoryPdDop.KategoryPdDopID = kategoryPdDopID;
            kategoryPdDop.KategoryPdDopSelect = kategoryPdDopSelect;
            return kategoryPdDop;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KategoryPdDopID
        {
            get
            {
                return _KategoryPdDopID;
            }
            set
            {
                if (_KategoryPdDopID != value)
                {
                    OnKategoryPdDopIDChanging(value);
                    ReportPropertyChanging("KategoryPdDopID");
                    _KategoryPdDopID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KategoryPdDopID");
                    OnKategoryPdDopIDChanged();
                }
            }
        }
        private global::System.Int32 _KategoryPdDopID;
        partial void OnKategoryPdDopIDChanging(global::System.Int32 value);
        partial void OnKategoryPdDopIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KategoryPdDopName
        {
            get
            {
                return _KategoryPdDopName;
            }
            set
            {
                OnKategoryPdDopNameChanging(value);
                ReportPropertyChanging("KategoryPdDopName");
                _KategoryPdDopName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KategoryPdDopName");
                OnKategoryPdDopNameChanged();
            }
        }
        private global::System.String _KategoryPdDopName;
        partial void OnKategoryPdDopNameChanging(global::System.String value);
        partial void OnKategoryPdDopNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean KategoryPdDopSelect
        {
            get
            {
                return _KategoryPdDopSelect;
            }
            set
            {
                OnKategoryPdDopSelectChanging(value);
                ReportPropertyChanging("KategoryPdDopSelect");
                _KategoryPdDopSelect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KategoryPdDopSelect");
                OnKategoryPdDopSelectChanged();
            }
        }
        private global::System.Boolean _KategoryPdDopSelect;
        partial void OnKategoryPdDopSelectChanging(global::System.Boolean value);
        partial void OnKategoryPdDopSelectChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrgOperatorID
        {
            get
            {
                return _OrgOperatorID;
            }
            set
            {
                OnOrgOperatorIDChanging(value);
                ReportPropertyChanging("OrgOperatorID");
                _OrgOperatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgOperatorID");
                OnOrgOperatorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrgOperatorID;
        partial void OnOrgOperatorIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrgOperatorIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "KategoryPdDop_FK00", "OrgOperator")]
        public OrgOperator OrgOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategoryPdDop_FK00", "OrgOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategoryPdDop_FK00", "OrgOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrgOperator> OrgOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategoryPdDop_FK00", "OrgOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategoryPdDop_FK00", "OrgOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryDopOtdel", "OtdelOrg")]
        public EntityCollection<OtdelOrg> OtdelOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieKategoryDopOtdel", "OtdelOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieKategoryDopOtdel", "OtdelOrg", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryPdDopISPDn", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieKategoryPdDopISPDn", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieKategoryPdDopISPDn", "ISPDnOperator", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="KategoryPdSpec")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KategoryPdSpec : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта KategoryPdSpec.
        /// </summary>
        /// <param name="kategoryPdSpecID">Исходное значение свойства KategoryPdSpecID.</param>
        public static KategoryPdSpec CreateKategoryPdSpec(global::System.Int32 kategoryPdSpecID)
        {
            KategoryPdSpec kategoryPdSpec = new KategoryPdSpec();
            kategoryPdSpec.KategoryPdSpecID = kategoryPdSpecID;
            return kategoryPdSpec;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KategoryPdSpecID
        {
            get
            {
                return _KategoryPdSpecID;
            }
            set
            {
                if (_KategoryPdSpecID != value)
                {
                    OnKategoryPdSpecIDChanging(value);
                    ReportPropertyChanging("KategoryPdSpecID");
                    _KategoryPdSpecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KategoryPdSpecID");
                    OnKategoryPdSpecIDChanged();
                }
            }
        }
        private global::System.Int32 _KategoryPdSpecID;
        partial void OnKategoryPdSpecIDChanging(global::System.Int32 value);
        partial void OnKategoryPdSpecIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KategoryPdSpecName
        {
            get
            {
                return _KategoryPdSpecName;
            }
            set
            {
                OnKategoryPdSpecNameChanging(value);
                ReportPropertyChanging("KategoryPdSpecName");
                _KategoryPdSpecName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KategoryPdSpecName");
                OnKategoryPdSpecNameChanged();
            }
        }
        private global::System.String _KategoryPdSpecName;
        partial void OnKategoryPdSpecNameChanging(global::System.String value);
        partial void OnKategoryPdSpecNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoriSpecOtdel", "OtdelOrg")]
        public EntityCollection<OtdelOrg> OtdelOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieKategoriSpecOtdel", "OtdelOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieKategoriSpecOtdel", "OtdelOrg", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryPdSpecISPDn", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieKategoryPdSpecISPDn", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieKategoryPdSpecISPDn", "ISPDnOperator", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="KategorySubj")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KategorySubj : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта KategorySubj.
        /// </summary>
        /// <param name="kategorySubjID">Исходное значение свойства KategorySubjID.</param>
        /// <param name="kategorySubjSelect">Исходное значение свойства KategorySubjSelect.</param>
        public static KategorySubj CreateKategorySubj(global::System.Int32 kategorySubjID, global::System.Boolean kategorySubjSelect)
        {
            KategorySubj kategorySubj = new KategorySubj();
            kategorySubj.KategorySubjID = kategorySubjID;
            kategorySubj.KategorySubjSelect = kategorySubjSelect;
            return kategorySubj;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KategorySubjID
        {
            get
            {
                return _KategorySubjID;
            }
            set
            {
                if (_KategorySubjID != value)
                {
                    OnKategorySubjIDChanging(value);
                    ReportPropertyChanging("KategorySubjID");
                    _KategorySubjID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KategorySubjID");
                    OnKategorySubjIDChanged();
                }
            }
        }
        private global::System.Int32 _KategorySubjID;
        partial void OnKategorySubjIDChanging(global::System.Int32 value);
        partial void OnKategorySubjIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KategorySubjName
        {
            get
            {
                return _KategorySubjName;
            }
            set
            {
                OnKategorySubjNameChanging(value);
                ReportPropertyChanging("KategorySubjName");
                _KategorySubjName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KategorySubjName");
                OnKategorySubjNameChanged();
            }
        }
        private global::System.String _KategorySubjName;
        partial void OnKategorySubjNameChanging(global::System.String value);
        partial void OnKategorySubjNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean KategorySubjSelect
        {
            get
            {
                return _KategorySubjSelect;
            }
            set
            {
                OnKategorySubjSelectChanging(value);
                ReportPropertyChanging("KategorySubjSelect");
                _KategorySubjSelect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KategorySubjSelect");
                OnKategorySubjSelectChanged();
            }
        }
        private global::System.Boolean _KategorySubjSelect;
        partial void OnKategorySubjSelectChanging(global::System.Boolean value);
        partial void OnKategorySubjSelectChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrgOperatorID
        {
            get
            {
                return _OrgOperatorID;
            }
            set
            {
                OnOrgOperatorIDChanging(value);
                ReportPropertyChanging("OrgOperatorID");
                _OrgOperatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgOperatorID");
                OnOrgOperatorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrgOperatorID;
        partial void OnOrgOperatorIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrgOperatorIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "KategorySubj_FK00", "OrgOperator")]
        public OrgOperator OrgOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategorySubj_FK00", "OrgOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategorySubj_FK00", "OrgOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrgOperator> OrgOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategorySubj_FK00", "OrgOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrgOperator>("ISPDnBDSQLModel.KategorySubj_FK00", "OrgOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieISPDnSubj_FK01", "MnogieISPDnSubj")]
        public EntityCollection<MnogieISPDnSubj> MnogieISPDnSubj
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieISPDnSubj>("ISPDnBDSQLModel.MnogieISPDnSubj_FK01", "MnogieISPDnSubj");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieISPDnSubj>("ISPDnBDSQLModel.MnogieISPDnSubj_FK01", "MnogieISPDnSubj", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieOtdelSubj", "OtdelOrg")]
        public EntityCollection<OtdelOrg> OtdelOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieOtdelSubj", "OtdelOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieOtdelSubj", "OtdelOrg", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="MnogieISPDnSubj")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MnogieISPDnSubj : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MnogieISPDnSubj.
        /// </summary>
        /// <param name="kategorySubjID">Исходное значение свойства KategorySubjID.</param>
        /// <param name="iSPDnOperatorID">Исходное значение свойства ISPDnOperatorID.</param>
        /// <param name="mnogISPDnSubj">Исходное значение свойства MnogISPDnSubj.</param>
        public static MnogieISPDnSubj CreateMnogieISPDnSubj(global::System.Int32 kategorySubjID, global::System.Int32 iSPDnOperatorID, global::System.Int32 mnogISPDnSubj)
        {
            MnogieISPDnSubj mnogieISPDnSubj = new MnogieISPDnSubj();
            mnogieISPDnSubj.KategorySubjID = kategorySubjID;
            mnogieISPDnSubj.ISPDnOperatorID = iSPDnOperatorID;
            mnogieISPDnSubj.MnogISPDnSubj = mnogISPDnSubj;
            return mnogieISPDnSubj;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KategorySubjID
        {
            get
            {
                return _KategorySubjID;
            }
            set
            {
                if (_KategorySubjID != value)
                {
                    OnKategorySubjIDChanging(value);
                    ReportPropertyChanging("KategorySubjID");
                    _KategorySubjID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KategorySubjID");
                    OnKategorySubjIDChanged();
                }
            }
        }
        private global::System.Int32 _KategorySubjID;
        partial void OnKategorySubjIDChanging(global::System.Int32 value);
        partial void OnKategorySubjIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnOperatorID
        {
            get
            {
                return _ISPDnOperatorID;
            }
            set
            {
                if (_ISPDnOperatorID != value)
                {
                    OnISPDnOperatorIDChanging(value);
                    ReportPropertyChanging("ISPDnOperatorID");
                    _ISPDnOperatorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnOperatorID");
                    OnISPDnOperatorIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnOperatorID;
        partial void OnISPDnOperatorIDChanging(global::System.Int32 value);
        partial void OnISPDnOperatorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MnogISPDnSubj
        {
            get
            {
                return _MnogISPDnSubj;
            }
            set
            {
                if (_MnogISPDnSubj != value)
                {
                    OnMnogISPDnSubjChanging(value);
                    ReportPropertyChanging("MnogISPDnSubj");
                    _MnogISPDnSubj = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MnogISPDnSubj");
                    OnMnogISPDnSubjChanged();
                }
            }
        }
        private global::System.Int32 _MnogISPDnSubj;
        partial void OnMnogISPDnSubjChanging(global::System.Int32 value);
        partial void OnMnogISPDnSubjChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieISPDnSubj_FK00", "ISPDnOperator")]
        public ISPDnOperator ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieISPDnSubj_FK00", "ISPDnOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieISPDnSubj_FK00", "ISPDnOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnOperator> ISPDnOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieISPDnSubj_FK00", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieISPDnSubj_FK00", "ISPDnOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieISPDnSubj_FK01", "KategorySubj")]
        public KategorySubj KategorySubj
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KategorySubj>("ISPDnBDSQLModel.MnogieISPDnSubj_FK01", "KategorySubj").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KategorySubj>("ISPDnBDSQLModel.MnogieISPDnSubj_FK01", "KategorySubj").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<KategorySubj> KategorySubjReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KategorySubj>("ISPDnBDSQLModel.MnogieISPDnSubj_FK01", "KategorySubj");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<KategorySubj>("ISPDnBDSQLModel.MnogieISPDnSubj_FK01", "KategorySubj", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="MnogieOpasnUgrozIS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MnogieOpasnUgrozIS : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MnogieOpasnUgrozIS.
        /// </summary>
        /// <param name="nazvanieUgrozID">Исходное значение свойства NazvanieUgrozID.</param>
        /// <param name="iSPDnOperatorID">Исходное значение свойства ISPDnOperatorID.</param>
        public static MnogieOpasnUgrozIS CreateMnogieOpasnUgrozIS(global::System.Int32 nazvanieUgrozID, global::System.Int32 iSPDnOperatorID)
        {
            MnogieOpasnUgrozIS mnogieOpasnUgrozIS = new MnogieOpasnUgrozIS();
            mnogieOpasnUgrozIS.NazvanieUgrozID = nazvanieUgrozID;
            mnogieOpasnUgrozIS.ISPDnOperatorID = iSPDnOperatorID;
            return mnogieOpasnUgrozIS;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NazvanieUgrozID
        {
            get
            {
                return _NazvanieUgrozID;
            }
            set
            {
                if (_NazvanieUgrozID != value)
                {
                    OnNazvanieUgrozIDChanging(value);
                    ReportPropertyChanging("NazvanieUgrozID");
                    _NazvanieUgrozID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NazvanieUgrozID");
                    OnNazvanieUgrozIDChanged();
                }
            }
        }
        private global::System.Int32 _NazvanieUgrozID;
        partial void OnNazvanieUgrozIDChanging(global::System.Int32 value);
        partial void OnNazvanieUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnOperatorID
        {
            get
            {
                return _ISPDnOperatorID;
            }
            set
            {
                if (_ISPDnOperatorID != value)
                {
                    OnISPDnOperatorIDChanging(value);
                    ReportPropertyChanging("ISPDnOperatorID");
                    _ISPDnOperatorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnOperatorID");
                    OnISPDnOperatorIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnOperatorID;
        partial void OnISPDnOperatorIDChanging(global::System.Int32 value);
        partial void OnISPDnOperatorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OpasnostUgrozID
        {
            get
            {
                return _OpasnostUgrozID;
            }
            set
            {
                OnOpasnostUgrozIDChanging(value);
                ReportPropertyChanging("OpasnostUgrozID");
                _OpasnostUgrozID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpasnostUgrozID");
                OnOpasnostUgrozIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OpasnostUgrozID;
        partial void OnOpasnostUgrozIDChanging(Nullable<global::System.Int32> value);
        partial void OnOpasnostUgrozIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieOpasnUgrozIS_FK00", "ISPDnOperator")]
        public ISPDnOperator ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK00", "ISPDnOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK00", "ISPDnOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnOperator> ISPDnOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK00", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK00", "ISPDnOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieOpasnUgrozIS_FK01", "NazvanieUgroz")]
        public NazvanieUgroz NazvanieUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK01", "NazvanieUgroz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK01", "NazvanieUgroz").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NazvanieUgroz> NazvanieUgrozReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK01", "NazvanieUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK01", "NazvanieUgroz", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieOpasnUgrozIS_FK02", "OpasnostUgroz")]
        public OpasnostUgroz OpasnostUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OpasnostUgroz>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK02", "OpasnostUgroz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OpasnostUgroz>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK02", "OpasnostUgroz").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OpasnostUgroz> OpasnostUgrozReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OpasnostUgroz>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK02", "OpasnostUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OpasnostUgroz>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK02", "OpasnostUgroz", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="MnogieRealizUgroz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MnogieRealizUgroz : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MnogieRealizUgroz.
        /// </summary>
        /// <param name="iSPDnOperatorID">Исходное значение свойства ISPDnOperatorID.</param>
        /// <param name="nazvanieUgrozID">Исходное значение свойства NazvanieUgrozID.</param>
        public static MnogieRealizUgroz CreateMnogieRealizUgroz(global::System.Int32 iSPDnOperatorID, global::System.Int32 nazvanieUgrozID)
        {
            MnogieRealizUgroz mnogieRealizUgroz = new MnogieRealizUgroz();
            mnogieRealizUgroz.ISPDnOperatorID = iSPDnOperatorID;
            mnogieRealizUgroz.NazvanieUgrozID = nazvanieUgrozID;
            return mnogieRealizUgroz;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealizationUgrozID
        {
            get
            {
                return _RealizationUgrozID;
            }
            set
            {
                OnRealizationUgrozIDChanging(value);
                ReportPropertyChanging("RealizationUgrozID");
                _RealizationUgrozID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RealizationUgrozID");
                OnRealizationUgrozIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RealizationUgrozID;
        partial void OnRealizationUgrozIDChanging(Nullable<global::System.Int32> value);
        partial void OnRealizationUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnOperatorID
        {
            get
            {
                return _ISPDnOperatorID;
            }
            set
            {
                if (_ISPDnOperatorID != value)
                {
                    OnISPDnOperatorIDChanging(value);
                    ReportPropertyChanging("ISPDnOperatorID");
                    _ISPDnOperatorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnOperatorID");
                    OnISPDnOperatorIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnOperatorID;
        partial void OnISPDnOperatorIDChanging(global::System.Int32 value);
        partial void OnISPDnOperatorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NazvanieUgrozID
        {
            get
            {
                return _NazvanieUgrozID;
            }
            set
            {
                if (_NazvanieUgrozID != value)
                {
                    OnNazvanieUgrozIDChanging(value);
                    ReportPropertyChanging("NazvanieUgrozID");
                    _NazvanieUgrozID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NazvanieUgrozID");
                    OnNazvanieUgrozIDChanged();
                }
            }
        }
        private global::System.Int32 _NazvanieUgrozID;
        partial void OnNazvanieUgrozIDChanging(global::System.Int32 value);
        partial void OnNazvanieUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KofRealization
        {
            get
            {
                return _KofRealization;
            }
            set
            {
                OnKofRealizationChanging(value);
                ReportPropertyChanging("KofRealization");
                _KofRealization = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KofRealization");
                OnKofRealizationChanged();
            }
        }
        private global::System.String _KofRealization;
        partial void OnKofRealizationChanging(global::System.String value);
        partial void OnKofRealizationChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieRealizUgroz_FK00", "ISPDnOperator")]
        public ISPDnOperator ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieRealizUgroz_FK00", "ISPDnOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieRealizUgroz_FK00", "ISPDnOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnOperator> ISPDnOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieRealizUgroz_FK00", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieRealizUgroz_FK00", "ISPDnOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieRealizUgroz_FK01", "NazvanieUgroz")]
        public NazvanieUgroz NazvanieUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK01", "NazvanieUgroz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK01", "NazvanieUgroz").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NazvanieUgroz> NazvanieUgrozReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK01", "NazvanieUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK01", "NazvanieUgroz", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieRealizUgroz_FK02", "RealizationUgroz")]
        public RealizationUgroz RealizationUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealizationUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK02", "RealizationUgroz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealizationUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK02", "RealizationUgroz").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RealizationUgroz> RealizationUgrozReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RealizationUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK02", "RealizationUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RealizationUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK02", "RealizationUgroz", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="MnogieUgrozaActual")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MnogieUgrozaActual : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MnogieUgrozaActual.
        /// </summary>
        /// <param name="nazvanieUgrozID">Исходное значение свойства NazvanieUgrozID.</param>
        /// <param name="iSPDnOperatorID">Исходное значение свойства ISPDnOperatorID.</param>
        public static MnogieUgrozaActual CreateMnogieUgrozaActual(global::System.Int32 nazvanieUgrozID, global::System.Int32 iSPDnOperatorID)
        {
            MnogieUgrozaActual mnogieUgrozaActual = new MnogieUgrozaActual();
            mnogieUgrozaActual.NazvanieUgrozID = nazvanieUgrozID;
            mnogieUgrozaActual.ISPDnOperatorID = iSPDnOperatorID;
            return mnogieUgrozaActual;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NazvanieUgrozID
        {
            get
            {
                return _NazvanieUgrozID;
            }
            set
            {
                if (_NazvanieUgrozID != value)
                {
                    OnNazvanieUgrozIDChanging(value);
                    ReportPropertyChanging("NazvanieUgrozID");
                    _NazvanieUgrozID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NazvanieUgrozID");
                    OnNazvanieUgrozIDChanged();
                }
            }
        }
        private global::System.Int32 _NazvanieUgrozID;
        partial void OnNazvanieUgrozIDChanging(global::System.Int32 value);
        partial void OnNazvanieUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnOperatorID
        {
            get
            {
                return _ISPDnOperatorID;
            }
            set
            {
                if (_ISPDnOperatorID != value)
                {
                    OnISPDnOperatorIDChanging(value);
                    ReportPropertyChanging("ISPDnOperatorID");
                    _ISPDnOperatorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnOperatorID");
                    OnISPDnOperatorIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnOperatorID;
        partial void OnISPDnOperatorIDChanging(global::System.Int32 value);
        partial void OnISPDnOperatorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ActualnostID
        {
            get
            {
                return _ActualnostID;
            }
            set
            {
                OnActualnostIDChanging(value);
                ReportPropertyChanging("ActualnostID");
                _ActualnostID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualnostID");
                OnActualnostIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ActualnostID;
        partial void OnActualnostIDChanging(Nullable<global::System.Int32> value);
        partial void OnActualnostIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieUgrozaActual_FK00", "Actualnost")]
        public Actualnost Actualnost
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actualnost>("ISPDnBDSQLModel.MnogieUgrozaActual_FK00", "Actualnost").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actualnost>("ISPDnBDSQLModel.MnogieUgrozaActual_FK00", "Actualnost").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actualnost> ActualnostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actualnost>("ISPDnBDSQLModel.MnogieUgrozaActual_FK00", "Actualnost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actualnost>("ISPDnBDSQLModel.MnogieUgrozaActual_FK00", "Actualnost", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieUgrozaActual_FK01", "ISPDnOperator")]
        public ISPDnOperator ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieUgrozaActual_FK01", "ISPDnOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieUgrozaActual_FK01", "ISPDnOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnOperator> ISPDnOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieUgrozaActual_FK01", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieUgrozaActual_FK01", "ISPDnOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieUgrozaActual_FK02", "NazvanieUgroz")]
        public NazvanieUgroz NazvanieUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieUgrozaActual_FK02", "NazvanieUgroz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieUgrozaActual_FK02", "NazvanieUgroz").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NazvanieUgroz> NazvanieUgrozReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieUgrozaActual_FK02", "NazvanieUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieUgrozaActual_FK02", "NazvanieUgroz", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="MnogieVerUgrozIS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MnogieVerUgrozIS : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MnogieVerUgrozIS.
        /// </summary>
        /// <param name="nazvanieUgrozID">Исходное значение свойства NazvanieUgrozID.</param>
        /// <param name="iSPDnOperatorID">Исходное значение свойства ISPDnOperatorID.</param>
        public static MnogieVerUgrozIS CreateMnogieVerUgrozIS(global::System.Int32 nazvanieUgrozID, global::System.Int32 iSPDnOperatorID)
        {
            MnogieVerUgrozIS mnogieVerUgrozIS = new MnogieVerUgrozIS();
            mnogieVerUgrozIS.NazvanieUgrozID = nazvanieUgrozID;
            mnogieVerUgrozIS.ISPDnOperatorID = iSPDnOperatorID;
            return mnogieVerUgrozIS;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NazvanieUgrozID
        {
            get
            {
                return _NazvanieUgrozID;
            }
            set
            {
                if (_NazvanieUgrozID != value)
                {
                    OnNazvanieUgrozIDChanging(value);
                    ReportPropertyChanging("NazvanieUgrozID");
                    _NazvanieUgrozID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NazvanieUgrozID");
                    OnNazvanieUgrozIDChanged();
                }
            }
        }
        private global::System.Int32 _NazvanieUgrozID;
        partial void OnNazvanieUgrozIDChanging(global::System.Int32 value);
        partial void OnNazvanieUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ISPDnOperatorID
        {
            get
            {
                return _ISPDnOperatorID;
            }
            set
            {
                if (_ISPDnOperatorID != value)
                {
                    OnISPDnOperatorIDChanging(value);
                    ReportPropertyChanging("ISPDnOperatorID");
                    _ISPDnOperatorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ISPDnOperatorID");
                    OnISPDnOperatorIDChanged();
                }
            }
        }
        private global::System.Int32 _ISPDnOperatorID;
        partial void OnISPDnOperatorIDChanging(global::System.Int32 value);
        partial void OnISPDnOperatorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VeroyatnostUgrozID
        {
            get
            {
                return _VeroyatnostUgrozID;
            }
            set
            {
                OnVeroyatnostUgrozIDChanging(value);
                ReportPropertyChanging("VeroyatnostUgrozID");
                _VeroyatnostUgrozID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VeroyatnostUgrozID");
                OnVeroyatnostUgrozIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VeroyatnostUgrozID;
        partial void OnVeroyatnostUgrozIDChanging(Nullable<global::System.Int32> value);
        partial void OnVeroyatnostUgrozIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieVerUgrozIS_FK00", "ISPDnOperator")]
        public ISPDnOperator ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK00", "ISPDnOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK00", "ISPDnOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ISPDnOperator> ISPDnOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK00", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ISPDnOperator>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK00", "ISPDnOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieVerUgrozIS_FK01", "NazvanieUgroz")]
        public NazvanieUgroz NazvanieUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK01", "NazvanieUgroz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK01", "NazvanieUgroz").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NazvanieUgroz> NazvanieUgrozReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK01", "NazvanieUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NazvanieUgroz>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK01", "NazvanieUgroz", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieVerUgrozIS_FK02", "VeroyatnostUgroz")]
        public VeroyatnostUgroz VeroyatnostUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VeroyatnostUgroz>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK02", "VeroyatnostUgroz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VeroyatnostUgroz>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK02", "VeroyatnostUgroz").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VeroyatnostUgroz> VeroyatnostUgrozReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VeroyatnostUgroz>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK02", "VeroyatnostUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VeroyatnostUgroz>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK02", "VeroyatnostUgroz", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="NazvanieUgroz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NazvanieUgroz : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта NazvanieUgroz.
        /// </summary>
        /// <param name="nazvanieUgrozID">Исходное значение свойства NazvanieUgrozID.</param>
        /// <param name="c1">Исходное значение свойства C1.</param>
        /// <param name="c2">Исходное значение свойства C2.</param>
        /// <param name="c3">Исходное значение свойства C3.</param>
        /// <param name="c4">Исходное значение свойства C4.</param>
        public static NazvanieUgroz CreateNazvanieUgroz(global::System.Int32 nazvanieUgrozID, global::System.Boolean c1, global::System.Boolean c2, global::System.Boolean c3, global::System.Boolean c4)
        {
            NazvanieUgroz nazvanieUgroz = new NazvanieUgroz();
            nazvanieUgroz.NazvanieUgrozID = nazvanieUgrozID;
            nazvanieUgroz.C1 = c1;
            nazvanieUgroz.C2 = c2;
            nazvanieUgroz.C3 = c3;
            nazvanieUgroz.C4 = c4;
            return nazvanieUgroz;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NazvanieUgrozID
        {
            get
            {
                return _NazvanieUgrozID;
            }
            set
            {
                if (_NazvanieUgrozID != value)
                {
                    OnNazvanieUgrozIDChanging(value);
                    ReportPropertyChanging("NazvanieUgrozID");
                    _NazvanieUgrozID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NazvanieUgrozID");
                    OnNazvanieUgrozIDChanged();
                }
            }
        }
        private global::System.Int32 _NazvanieUgrozID;
        partial void OnNazvanieUgrozIDChanging(global::System.Int32 value);
        partial void OnNazvanieUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NazvanieUgrozName
        {
            get
            {
                return _NazvanieUgrozName;
            }
            set
            {
                OnNazvanieUgrozNameChanging(value);
                ReportPropertyChanging("NazvanieUgrozName");
                _NazvanieUgrozName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NazvanieUgrozName");
                OnNazvanieUgrozNameChanged();
            }
        }
        private global::System.String _NazvanieUgrozName;
        partial void OnNazvanieUgrozNameChanging(global::System.String value);
        partial void OnNazvanieUgrozNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VidUgrozID
        {
            get
            {
                return _VidUgrozID;
            }
            set
            {
                OnVidUgrozIDChanging(value);
                ReportPropertyChanging("VidUgrozID");
                _VidUgrozID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VidUgrozID");
                OnVidUgrozIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VidUgrozID;
        partial void OnVidUgrozIDChanging(Nullable<global::System.Int32> value);
        partial void OnVidUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean C1
        {
            get
            {
                return _C1;
            }
            set
            {
                OnC1Changing(value);
                ReportPropertyChanging("C1");
                _C1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C1");
                OnC1Changed();
            }
        }
        private global::System.Boolean _C1;
        partial void OnC1Changing(global::System.Boolean value);
        partial void OnC1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean C2
        {
            get
            {
                return _C2;
            }
            set
            {
                OnC2Changing(value);
                ReportPropertyChanging("C2");
                _C2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C2");
                OnC2Changed();
            }
        }
        private global::System.Boolean _C2;
        partial void OnC2Changing(global::System.Boolean value);
        partial void OnC2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean C3
        {
            get
            {
                return _C3;
            }
            set
            {
                OnC3Changing(value);
                ReportPropertyChanging("C3");
                _C3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C3");
                OnC3Changed();
            }
        }
        private global::System.Boolean _C3;
        partial void OnC3Changing(global::System.Boolean value);
        partial void OnC3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean C4
        {
            get
            {
                return _C4;
            }
            set
            {
                OnC4Changing(value);
                ReportPropertyChanging("C4");
                _C4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C4");
                OnC4Changed();
            }
        }
        private global::System.Boolean _C4;
        partial void OnC4Changing(global::System.Boolean value);
        partial void OnC4Changed();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieOpasnUgrozIS_FK01", "MnogieOpasnUgrozIS")]
        public EntityCollection<MnogieOpasnUgrozIS> MnogieOpasnUgrozIS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieOpasnUgrozIS>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK01", "MnogieOpasnUgrozIS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieOpasnUgrozIS>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK01", "MnogieOpasnUgrozIS", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieRealizUgroz_FK01", "MnogieRealizUgroz")]
        public EntityCollection<MnogieRealizUgroz> MnogieRealizUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieRealizUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK01", "MnogieRealizUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieRealizUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK01", "MnogieRealizUgroz", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieUgrozaActual_FK02", "MnogieUgrozaActual")]
        public EntityCollection<MnogieUgrozaActual> MnogieUgrozaActual
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieUgrozaActual>("ISPDnBDSQLModel.MnogieUgrozaActual_FK02", "MnogieUgrozaActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieUgrozaActual>("ISPDnBDSQLModel.MnogieUgrozaActual_FK02", "MnogieUgrozaActual", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieVerUgrozIS_FK01", "MnogieVerUgrozIS")]
        public EntityCollection<MnogieVerUgrozIS> MnogieVerUgrozIS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieVerUgrozIS>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK01", "MnogieVerUgrozIS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieVerUgrozIS>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK01", "MnogieVerUgrozIS", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "NazvanieUgroz_FK00", "VidUgroz")]
        public VidUgroz VidUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VidUgroz>("ISPDnBDSQLModel.NazvanieUgroz_FK00", "VidUgroz").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VidUgroz>("ISPDnBDSQLModel.NazvanieUgroz_FK00", "VidUgroz").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VidUgroz> VidUgrozReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VidUgroz>("ISPDnBDSQLModel.NazvanieUgroz_FK00", "VidUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VidUgroz>("ISPDnBDSQLModel.NazvanieUgroz_FK00", "VidUgroz", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="OpasnostUgroz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OpasnostUgroz : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OpasnostUgroz.
        /// </summary>
        /// <param name="opasnostUgrozID">Исходное значение свойства OpasnostUgrozID.</param>
        public static OpasnostUgroz CreateOpasnostUgroz(global::System.Int32 opasnostUgrozID)
        {
            OpasnostUgroz opasnostUgroz = new OpasnostUgroz();
            opasnostUgroz.OpasnostUgrozID = opasnostUgrozID;
            return opasnostUgroz;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OpasnostUgrozID
        {
            get
            {
                return _OpasnostUgrozID;
            }
            set
            {
                if (_OpasnostUgrozID != value)
                {
                    OnOpasnostUgrozIDChanging(value);
                    ReportPropertyChanging("OpasnostUgrozID");
                    _OpasnostUgrozID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OpasnostUgrozID");
                    OnOpasnostUgrozIDChanged();
                }
            }
        }
        private global::System.Int32 _OpasnostUgrozID;
        partial void OnOpasnostUgrozIDChanging(global::System.Int32 value);
        partial void OnOpasnostUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpasnostUgrozName
        {
            get
            {
                return _OpasnostUgrozName;
            }
            set
            {
                OnOpasnostUgrozNameChanging(value);
                ReportPropertyChanging("OpasnostUgrozName");
                _OpasnostUgrozName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpasnostUgrozName");
                OnOpasnostUgrozNameChanged();
            }
        }
        private global::System.String _OpasnostUgrozName;
        partial void OnOpasnostUgrozNameChanging(global::System.String value);
        partial void OnOpasnostUgrozNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieOpasnUgrozIS_FK02", "MnogieOpasnUgrozIS")]
        public EntityCollection<MnogieOpasnUgrozIS> MnogieOpasnUgrozIS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieOpasnUgrozIS>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK02", "MnogieOpasnUgrozIS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieOpasnUgrozIS>("ISPDnBDSQLModel.MnogieOpasnUgrozIS_FK02", "MnogieOpasnUgrozIS", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="OrgOperator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrgOperator : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrgOperator.
        /// </summary>
        /// <param name="orgOperatorID">Исходное значение свойства OrgOperatorID.</param>
        public static OrgOperator CreateOrgOperator(global::System.Int32 orgOperatorID)
        {
            OrgOperator orgOperator = new OrgOperator();
            orgOperator.OrgOperatorID = orgOperatorID;
            return orgOperator;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrgOperatorID
        {
            get
            {
                return _OrgOperatorID;
            }
            set
            {
                if (_OrgOperatorID != value)
                {
                    OnOrgOperatorIDChanging(value);
                    ReportPropertyChanging("OrgOperatorID");
                    _OrgOperatorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrgOperatorID");
                    OnOrgOperatorIDChanged();
                }
            }
        }
        private global::System.Int32 _OrgOperatorID;
        partial void OnOrgOperatorIDChanging(global::System.Int32 value);
        partial void OnOrgOperatorIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrgOperatorKratkName
        {
            get
            {
                return _OrgOperatorKratkName;
            }
            set
            {
                OnOrgOperatorKratkNameChanging(value);
                ReportPropertyChanging("OrgOperatorKratkName");
                _OrgOperatorKratkName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrgOperatorKratkName");
                OnOrgOperatorKratkNameChanged();
            }
        }
        private global::System.String _OrgOperatorKratkName;
        partial void OnOrgOperatorKratkNameChanging(global::System.String value);
        partial void OnOrgOperatorKratkNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrgOperatorFullName
        {
            get
            {
                return _OrgOperatorFullName;
            }
            set
            {
                OnOrgOperatorFullNameChanging(value);
                ReportPropertyChanging("OrgOperatorFullName");
                _OrgOperatorFullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrgOperatorFullName");
                OnOrgOperatorFullNameChanged();
            }
        }
        private global::System.String _OrgOperatorFullName;
        partial void OnOrgOperatorFullNameChanging(global::System.String value);
        partial void OnOrgOperatorFullNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrgOperatorINN
        {
            get
            {
                return _OrgOperatorINN;
            }
            set
            {
                OnOrgOperatorINNChanging(value);
                ReportPropertyChanging("OrgOperatorINN");
                _OrgOperatorINN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrgOperatorINN");
                OnOrgOperatorINNChanged();
            }
        }
        private global::System.String _OrgOperatorINN;
        partial void OnOrgOperatorINNChanging(global::System.String value);
        partial void OnOrgOperatorINNChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrgOperatorRukovoditelName
        {
            get
            {
                return _OrgOperatorRukovoditelName;
            }
            set
            {
                OnOrgOperatorRukovoditelNameChanging(value);
                ReportPropertyChanging("OrgOperatorRukovoditelName");
                _OrgOperatorRukovoditelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrgOperatorRukovoditelName");
                OnOrgOperatorRukovoditelNameChanged();
            }
        }
        private global::System.String _OrgOperatorRukovoditelName;
        partial void OnOrgOperatorRukovoditelNameChanging(global::System.String value);
        partial void OnOrgOperatorRukovoditelNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrgOperatorRukovoditelDolgn
        {
            get
            {
                return _OrgOperatorRukovoditelDolgn;
            }
            set
            {
                OnOrgOperatorRukovoditelDolgnChanging(value);
                ReportPropertyChanging("OrgOperatorRukovoditelDolgn");
                _OrgOperatorRukovoditelDolgn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrgOperatorRukovoditelDolgn");
                OnOrgOperatorRukovoditelDolgnChanged();
            }
        }
        private global::System.String _OrgOperatorRukovoditelDolgn;
        partial void OnOrgOperatorRukovoditelDolgnChanging(global::System.String value);
        partial void OnOrgOperatorRukovoditelDolgnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrgOperatorAdress
        {
            get
            {
                return _OrgOperatorAdress;
            }
            set
            {
                OnOrgOperatorAdressChanging(value);
                ReportPropertyChanging("OrgOperatorAdress");
                _OrgOperatorAdress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrgOperatorAdress");
                OnOrgOperatorAdressChanged();
            }
        }
        private global::System.String _OrgOperatorAdress;
        partial void OnOrgOperatorAdressChanging(global::System.String value);
        partial void OnOrgOperatorAdressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "CeliObrabotkiPD_FK00", "CeliObrabotkiPD")]
        public EntityCollection<CeliObrabotkiPD> CeliObrabotkiPD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CeliObrabotkiPD>("ISPDnBDSQLModel.CeliObrabotkiPD_FK00", "CeliObrabotkiPD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CeliObrabotkiPD>("ISPDnBDSQLModel.CeliObrabotkiPD_FK00", "CeliObrabotkiPD", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnOperator_FK05", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK05", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.ISPDnOperator_FK05", "ISPDnOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "KategoryPdBio_FK00", "KategoryPdBio")]
        public EntityCollection<KategoryPdBio> KategoryPdBio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPdBio>("ISPDnBDSQLModel.KategoryPdBio_FK00", "KategoryPdBio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPdBio>("ISPDnBDSQLModel.KategoryPdBio_FK00", "KategoryPdBio", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "KategoryPdDop_FK00", "KategoryPdDop")]
        public EntityCollection<KategoryPdDop> KategoryPdDop
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPdDop>("ISPDnBDSQLModel.KategoryPdDop_FK00", "KategoryPdDop");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPdDop>("ISPDnBDSQLModel.KategoryPdDop_FK00", "KategoryPdDop", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "KategorySubj_FK00", "KategorySubj")]
        public EntityCollection<KategorySubj> KategorySubj
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategorySubj>("ISPDnBDSQLModel.KategorySubj_FK00", "KategorySubj");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategorySubj>("ISPDnBDSQLModel.KategorySubj_FK00", "KategorySubj", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "OtdelOrg_FK00", "OtdelOrg")]
        public EntityCollection<OtdelOrg> OtdelOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.OtdelOrg_FK00", "OtdelOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.OtdelOrg_FK00", "OtdelOrg", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "RabotnikiOrg_FK00", "RabotnikiOrg")]
        public EntityCollection<RabotnikiOrg> RabotnikiOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RabotnikiOrg>("ISPDnBDSQLModel.RabotnikiOrg_FK00", "RabotnikiOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RabotnikiOrg>("ISPDnBDSQLModel.RabotnikiOrg_FK00", "RabotnikiOrg", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="OtdelOrg")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OtdelOrg : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OtdelOrg.
        /// </summary>
        /// <param name="otdelOrgID">Исходное значение свойства OtdelOrgID.</param>
        public static OtdelOrg CreateOtdelOrg(global::System.Int32 otdelOrgID)
        {
            OtdelOrg otdelOrg = new OtdelOrg();
            otdelOrg.OtdelOrgID = otdelOrgID;
            return otdelOrg;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OtdelOrgID
        {
            get
            {
                return _OtdelOrgID;
            }
            set
            {
                if (_OtdelOrgID != value)
                {
                    OnOtdelOrgIDChanging(value);
                    ReportPropertyChanging("OtdelOrgID");
                    _OtdelOrgID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OtdelOrgID");
                    OnOtdelOrgIDChanged();
                }
            }
        }
        private global::System.Int32 _OtdelOrgID;
        partial void OnOtdelOrgIDChanging(global::System.Int32 value);
        partial void OnOtdelOrgIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtdelOrgName
        {
            get
            {
                return _OtdelOrgName;
            }
            set
            {
                OnOtdelOrgNameChanging(value);
                ReportPropertyChanging("OtdelOrgName");
                _OtdelOrgName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtdelOrgName");
                OnOtdelOrgNameChanged();
            }
        }
        private global::System.String _OtdelOrgName;
        partial void OnOtdelOrgNameChanging(global::System.String value);
        partial void OnOtdelOrgNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrgOperatorID
        {
            get
            {
                return _OrgOperatorID;
            }
            set
            {
                OnOrgOperatorIDChanging(value);
                ReportPropertyChanging("OrgOperatorID");
                _OrgOperatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgOperatorID");
                OnOrgOperatorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrgOperatorID;
        partial void OnOrgOperatorIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrgOperatorIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "OtdelOrg_FK00", "OrgOperator")]
        public OrgOperator OrgOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.OtdelOrg_FK00", "OrgOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.OtdelOrg_FK00", "OrgOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrgOperator> OrgOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.OtdelOrg_FK00", "OrgOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrgOperator>("ISPDnBDSQLModel.OtdelOrg_FK00", "OrgOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieCeliOtdel", "CeliObrabotkiPD")]
        public EntityCollection<CeliObrabotkiPD> CeliObrabotkiPD
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CeliObrabotkiPD>("ISPDnBDSQLModel.MnogieCeliOtdel", "CeliObrabotkiPD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CeliObrabotkiPD>("ISPDnBDSQLModel.MnogieCeliOtdel", "CeliObrabotkiPD", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoriSpecOtdel", "KategoryPdSpec")]
        public EntityCollection<KategoryPdSpec> KategoryPdSpec
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPdSpec>("ISPDnBDSQLModel.MnogieKategoriSpecOtdel", "KategoryPdSpec");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPdSpec>("ISPDnBDSQLModel.MnogieKategoriSpecOtdel", "KategoryPdSpec", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryBioOtdel", "KategoryPdBio")]
        public EntityCollection<KategoryPdBio> KategoryPdBio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPdBio>("ISPDnBDSQLModel.MnogieKategoryBioOtdel", "KategoryPdBio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPdBio>("ISPDnBDSQLModel.MnogieKategoryBioOtdel", "KategoryPdBio", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryDopOtdel", "KategoryPdDop")]
        public EntityCollection<KategoryPdDop> KategoryPdDop
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPdDop>("ISPDnBDSQLModel.MnogieKategoryDopOtdel", "KategoryPdDop");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPdDop>("ISPDnBDSQLModel.MnogieKategoryDopOtdel", "KategoryPdDop", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieKategoryPdOtdel", "KategoryPd")]
        public EntityCollection<KategoryPd> KategoryPd
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategoryPd>("ISPDnBDSQLModel.MnogieKategoryPdOtdel", "KategoryPd");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategoryPd>("ISPDnBDSQLModel.MnogieKategoryPdOtdel", "KategoryPd", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieOtdelSubj", "KategorySubj")]
        public EntityCollection<KategorySubj> KategorySubj
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KategorySubj>("ISPDnBDSQLModel.MnogieOtdelSubj", "KategorySubj");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KategorySubj>("ISPDnBDSQLModel.MnogieOtdelSubj", "KategorySubj", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieRabotnikiOtdel", "RabotnikiOrg")]
        public EntityCollection<RabotnikiOrg> RabotnikiOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RabotnikiOrg>("ISPDnBDSQLModel.MnogieRabotnikiOtdel", "RabotnikiOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RabotnikiOrg>("ISPDnBDSQLModel.MnogieRabotnikiOtdel", "RabotnikiOrg", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="RabotnikiOrg")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RabotnikiOrg : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RabotnikiOrg.
        /// </summary>
        /// <param name="rabotnikiOrgID">Исходное значение свойства RabotnikiOrgID.</param>
        /// <param name="rabotnikiOrgSelect">Исходное значение свойства RabotnikiOrgSelect.</param>
        public static RabotnikiOrg CreateRabotnikiOrg(global::System.Int32 rabotnikiOrgID, global::System.Boolean rabotnikiOrgSelect)
        {
            RabotnikiOrg rabotnikiOrg = new RabotnikiOrg();
            rabotnikiOrg.RabotnikiOrgID = rabotnikiOrgID;
            rabotnikiOrg.RabotnikiOrgSelect = rabotnikiOrgSelect;
            return rabotnikiOrg;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RabotnikiOrgID
        {
            get
            {
                return _RabotnikiOrgID;
            }
            set
            {
                if (_RabotnikiOrgID != value)
                {
                    OnRabotnikiOrgIDChanging(value);
                    ReportPropertyChanging("RabotnikiOrgID");
                    _RabotnikiOrgID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RabotnikiOrgID");
                    OnRabotnikiOrgIDChanged();
                }
            }
        }
        private global::System.Int32 _RabotnikiOrgID;
        partial void OnRabotnikiOrgIDChanging(global::System.Int32 value);
        partial void OnRabotnikiOrgIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RabotnikiOrgFio
        {
            get
            {
                return _RabotnikiOrgFio;
            }
            set
            {
                OnRabotnikiOrgFioChanging(value);
                ReportPropertyChanging("RabotnikiOrgFio");
                _RabotnikiOrgFio = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RabotnikiOrgFio");
                OnRabotnikiOrgFioChanged();
            }
        }
        private global::System.String _RabotnikiOrgFio;
        partial void OnRabotnikiOrgFioChanging(global::System.String value);
        partial void OnRabotnikiOrgFioChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RabotnikiOrgDolgn
        {
            get
            {
                return _RabotnikiOrgDolgn;
            }
            set
            {
                OnRabotnikiOrgDolgnChanging(value);
                ReportPropertyChanging("RabotnikiOrgDolgn");
                _RabotnikiOrgDolgn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RabotnikiOrgDolgn");
                OnRabotnikiOrgDolgnChanged();
            }
        }
        private global::System.String _RabotnikiOrgDolgn;
        partial void OnRabotnikiOrgDolgnChanging(global::System.String value);
        partial void OnRabotnikiOrgDolgnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RabotnikiOrgSelect
        {
            get
            {
                return _RabotnikiOrgSelect;
            }
            set
            {
                OnRabotnikiOrgSelectChanging(value);
                ReportPropertyChanging("RabotnikiOrgSelect");
                _RabotnikiOrgSelect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RabotnikiOrgSelect");
                OnRabotnikiOrgSelectChanged();
            }
        }
        private global::System.Boolean _RabotnikiOrgSelect;
        partial void OnRabotnikiOrgSelectChanging(global::System.Boolean value);
        partial void OnRabotnikiOrgSelectChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrgOperatorID
        {
            get
            {
                return _OrgOperatorID;
            }
            set
            {
                OnOrgOperatorIDChanging(value);
                ReportPropertyChanging("OrgOperatorID");
                _OrgOperatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgOperatorID");
                OnOrgOperatorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrgOperatorID;
        partial void OnOrgOperatorIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrgOperatorIDChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "RabotnikiOrg_FK00", "OrgOperator")]
        public OrgOperator OrgOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.RabotnikiOrg_FK00", "OrgOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.RabotnikiOrg_FK00", "OrgOperator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrgOperator> OrgOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrgOperator>("ISPDnBDSQLModel.RabotnikiOrg_FK00", "OrgOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrgOperator>("ISPDnBDSQLModel.RabotnikiOrg_FK00", "OrgOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieISPDnRabotniki", "ISPDnOperator")]
        public EntityCollection<ISPDnOperator> ISPDnOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieISPDnRabotniki", "ISPDnOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnOperator>("ISPDnBDSQLModel.MnogieISPDnRabotniki", "ISPDnOperator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieRabotnikiOtdel", "OtdelOrg")]
        public EntityCollection<OtdelOrg> OtdelOrg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieRabotnikiOtdel", "OtdelOrg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtdelOrg>("ISPDnBDSQLModel.MnogieRabotnikiOtdel", "OtdelOrg", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="RealizationUgroz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RealizationUgroz : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RealizationUgroz.
        /// </summary>
        /// <param name="realizationUgrozID">Исходное значение свойства RealizationUgrozID.</param>
        public static RealizationUgroz CreateRealizationUgroz(global::System.Int32 realizationUgrozID)
        {
            RealizationUgroz realizationUgroz = new RealizationUgroz();
            realizationUgroz.RealizationUgrozID = realizationUgrozID;
            return realizationUgroz;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RealizationUgrozID
        {
            get
            {
                return _RealizationUgrozID;
            }
            set
            {
                if (_RealizationUgrozID != value)
                {
                    OnRealizationUgrozIDChanging(value);
                    ReportPropertyChanging("RealizationUgrozID");
                    _RealizationUgrozID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealizationUgrozID");
                    OnRealizationUgrozIDChanged();
                }
            }
        }
        private global::System.Int32 _RealizationUgrozID;
        partial void OnRealizationUgrozIDChanging(global::System.Int32 value);
        partial void OnRealizationUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RealizationUgrozName
        {
            get
            {
                return _RealizationUgrozName;
            }
            set
            {
                OnRealizationUgrozNameChanging(value);
                ReportPropertyChanging("RealizationUgrozName");
                _RealizationUgrozName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RealizationUgrozName");
                OnRealizationUgrozNameChanged();
            }
        }
        private global::System.String _RealizationUgrozName;
        partial void OnRealizationUgrozNameChanging(global::System.String value);
        partial void OnRealizationUgrozNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RealizationUgrozKof
        {
            get
            {
                return _RealizationUgrozKof;
            }
            set
            {
                OnRealizationUgrozKofChanging(value);
                ReportPropertyChanging("RealizationUgrozKof");
                _RealizationUgrozKof = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RealizationUgrozKof");
                OnRealizationUgrozKofChanged();
            }
        }
        private Nullable<global::System.Int32> _RealizationUgrozKof;
        partial void OnRealizationUgrozKofChanging(Nullable<global::System.Int32> value);
        partial void OnRealizationUgrozKofChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieRealizUgroz_FK02", "MnogieRealizUgroz")]
        public EntityCollection<MnogieRealizUgroz> MnogieRealizUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieRealizUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK02", "MnogieRealizUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieRealizUgroz>("ISPDnBDSQLModel.MnogieRealizUgroz_FK02", "MnogieRealizUgroz", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="VeroyatnostUgroz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VeroyatnostUgroz : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта VeroyatnostUgroz.
        /// </summary>
        /// <param name="veroyatnostUgrozID">Исходное значение свойства VeroyatnostUgrozID.</param>
        public static VeroyatnostUgroz CreateVeroyatnostUgroz(global::System.Int32 veroyatnostUgrozID)
        {
            VeroyatnostUgroz veroyatnostUgroz = new VeroyatnostUgroz();
            veroyatnostUgroz.VeroyatnostUgrozID = veroyatnostUgrozID;
            return veroyatnostUgroz;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VeroyatnostUgrozID
        {
            get
            {
                return _VeroyatnostUgrozID;
            }
            set
            {
                if (_VeroyatnostUgrozID != value)
                {
                    OnVeroyatnostUgrozIDChanging(value);
                    ReportPropertyChanging("VeroyatnostUgrozID");
                    _VeroyatnostUgrozID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VeroyatnostUgrozID");
                    OnVeroyatnostUgrozIDChanged();
                }
            }
        }
        private global::System.Int32 _VeroyatnostUgrozID;
        partial void OnVeroyatnostUgrozIDChanging(global::System.Int32 value);
        partial void OnVeroyatnostUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VeroyatnostUgrozName
        {
            get
            {
                return _VeroyatnostUgrozName;
            }
            set
            {
                OnVeroyatnostUgrozNameChanging(value);
                ReportPropertyChanging("VeroyatnostUgrozName");
                _VeroyatnostUgrozName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VeroyatnostUgrozName");
                OnVeroyatnostUgrozNameChanged();
            }
        }
        private global::System.String _VeroyatnostUgrozName;
        partial void OnVeroyatnostUgrozNameChanging(global::System.String value);
        partial void OnVeroyatnostUgrozNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpisanieVeroyatnosti
        {
            get
            {
                return _OpisanieVeroyatnosti;
            }
            set
            {
                OnOpisanieVeroyatnostiChanging(value);
                ReportPropertyChanging("OpisanieVeroyatnosti");
                _OpisanieVeroyatnosti = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpisanieVeroyatnosti");
                OnOpisanieVeroyatnostiChanged();
            }
        }
        private global::System.String _OpisanieVeroyatnosti;
        partial void OnOpisanieVeroyatnostiChanging(global::System.String value);
        partial void OnOpisanieVeroyatnostiChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VeroyantnKofY2
        {
            get
            {
                return _VeroyantnKofY2;
            }
            set
            {
                OnVeroyantnKofY2Changing(value);
                ReportPropertyChanging("VeroyantnKofY2");
                _VeroyantnKofY2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VeroyantnKofY2");
                OnVeroyantnKofY2Changed();
            }
        }
        private Nullable<global::System.Int32> _VeroyantnKofY2;
        partial void OnVeroyantnKofY2Changing(Nullable<global::System.Int32> value);
        partial void OnVeroyantnKofY2Changed();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "MnogieVerUgrozIS_FK02", "MnogieVerUgrozIS")]
        public EntityCollection<MnogieVerUgrozIS> MnogieVerUgrozIS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MnogieVerUgrozIS>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK02", "MnogieVerUgrozIS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MnogieVerUgrozIS>("ISPDnBDSQLModel.MnogieVerUgrozIS_FK02", "MnogieVerUgrozIS", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="VidIshodHarakteristik")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VidIshodHarakteristik : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта VidIshodHarakteristik.
        /// </summary>
        /// <param name="vidIshodHarakteristikID">Исходное значение свойства VidIshodHarakteristikID.</param>
        public static VidIshodHarakteristik CreateVidIshodHarakteristik(global::System.Int32 vidIshodHarakteristikID)
        {
            VidIshodHarakteristik vidIshodHarakteristik = new VidIshodHarakteristik();
            vidIshodHarakteristik.VidIshodHarakteristikID = vidIshodHarakteristikID;
            return vidIshodHarakteristik;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VidIshodHarakteristikID
        {
            get
            {
                return _VidIshodHarakteristikID;
            }
            set
            {
                if (_VidIshodHarakteristikID != value)
                {
                    OnVidIshodHarakteristikIDChanging(value);
                    ReportPropertyChanging("VidIshodHarakteristikID");
                    _VidIshodHarakteristikID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VidIshodHarakteristikID");
                    OnVidIshodHarakteristikIDChanged();
                }
            }
        }
        private global::System.Int32 _VidIshodHarakteristikID;
        partial void OnVidIshodHarakteristikIDChanging(global::System.Int32 value);
        partial void OnVidIshodHarakteristikIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VidIshodHarakteristikName
        {
            get
            {
                return _VidIshodHarakteristikName;
            }
            set
            {
                OnVidIshodHarakteristikNameChanging(value);
                ReportPropertyChanging("VidIshodHarakteristikName");
                _VidIshodHarakteristikName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VidIshodHarakteristikName");
                OnVidIshodHarakteristikNameChanged();
            }
        }
        private global::System.String _VidIshodHarakteristikName;
        partial void OnVidIshodHarakteristikNameChanging(global::System.String value);
        partial void OnVidIshodHarakteristikNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "ISPDnHarakteristikIshod_FK00", "ISPDnHarakteristikIshod")]
        public EntityCollection<ISPDnHarakteristikIshod> ISPDnHarakteristikIshod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ISPDnHarakteristikIshod>("ISPDnBDSQLModel.ISPDnHarakteristikIshod_FK00", "ISPDnHarakteristikIshod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ISPDnHarakteristikIshod>("ISPDnBDSQLModel.ISPDnHarakteristikIshod_FK00", "ISPDnHarakteristikIshod", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ISPDnBDSQLModel", Name="VidUgroz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VidUgroz : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта VidUgroz.
        /// </summary>
        /// <param name="vidUgrozID">Исходное значение свойства VidUgrozID.</param>
        public static VidUgroz CreateVidUgroz(global::System.Int32 vidUgrozID)
        {
            VidUgroz vidUgroz = new VidUgroz();
            vidUgroz.VidUgrozID = vidUgrozID;
            return vidUgroz;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VidUgrozID
        {
            get
            {
                return _VidUgrozID;
            }
            set
            {
                if (_VidUgrozID != value)
                {
                    OnVidUgrozIDChanging(value);
                    ReportPropertyChanging("VidUgrozID");
                    _VidUgrozID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VidUgrozID");
                    OnVidUgrozIDChanged();
                }
            }
        }
        private global::System.Int32 _VidUgrozID;
        partial void OnVidUgrozIDChanging(global::System.Int32 value);
        partial void OnVidUgrozIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VidUgrozName
        {
            get
            {
                return _VidUgrozName;
            }
            set
            {
                OnVidUgrozNameChanging(value);
                ReportPropertyChanging("VidUgrozName");
                _VidUgrozName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VidUgrozName");
                OnVidUgrozNameChanged();
            }
        }
        private global::System.String _VidUgrozName;
        partial void OnVidUgrozNameChanging(global::System.String value);
        partial void OnVidUgrozNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ISPDnBDSQLModel", "NazvanieUgroz_FK00", "NazvanieUgroz")]
        public EntityCollection<NazvanieUgroz> NazvanieUgroz
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NazvanieUgroz>("ISPDnBDSQLModel.NazvanieUgroz_FK00", "NazvanieUgroz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NazvanieUgroz>("ISPDnBDSQLModel.NazvanieUgroz_FK00", "NazvanieUgroz", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
